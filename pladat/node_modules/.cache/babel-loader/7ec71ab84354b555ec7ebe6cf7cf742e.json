{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\akgun\\\\Desktop\\\\PlaDat\\\\pladat\\\\src\\\\components\\\\SignUpFormCompany.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form } from \"semantic-ui-react\";\nimport $ from \"jquery\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport Message from \"./Message\";\n\nfunction SignUpFormCompany() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [company_name, setCompanyName] = useState(null);\n  const [email, setEmail] = useState(null);\n  const [company_city, setCompanyCity] = useState(null);\n  const [pass, setPass] = useState(null);\n  const [confirm_pass, setConfirmPass] = useState(null);\n  const [company_name_error, setCompanyNameError] = useState(null);\n  const [email_error, setEmailError] = useState(null);\n  const [pass_error, setPassError] = useState([]);\n  const [confirm_pass_error, setConfirmPassError] = useState(null);\n  const [city, setCity] = useState(null);\n  const [loaded, setLoaded] = useState(false); //for form select values\n\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(false); //for firebase\n\n  const {\n    signup\n  } = useAuth();\n\n  function isValid() {\n    _s();\n\n    var format = /[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n\n    function hasUpper(str) {\n      return /[A-Z]/.test(str);\n    }\n\n    if (!company_name) {\n      setCompanyNameError(prevState => prevState = \"Company name is required\");\n    }\n\n    if (!email) {\n      setEmailError(prevState => prevState = \"Email required\");\n    } else if (!/^[A-Z0-9._%+-]+@[[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(email)) {\n      setEmailError(prevState => prevState = \"Email is invalid\");\n    }\n\n    if (!pass) {\n      useEffect(() => {\n        // Should not ever set state during rendering, so do this in useEffect instead.\n        setPassError(prevState => prevState.push(\"Password is required\"));\n      }, []);\n    }\n\n    if (pass.length < 8) {\n      setPassError(prevState => prevState.concat(\"Password needs to be at least 8 characters\\n\"));\n    }\n\n    if (!format.test(pass)) {\n      setPassError(prevState => prevState.concat(\"Passwords must contain at least one special character\\n\"));\n    }\n\n    if (!hasUpper(pass)) {\n      setPassError(prevState => prevState.concat(\"Password must contain at leat one upper case character\\n\"));\n    }\n\n    if (!confirm_pass) {\n      setConfirmPassError(prevState => prevState = \"This field is required\");\n    } else if (pass !== confirm_pass) {\n      setConfirmPassError(prevState => prevState = \"Passwords must match\");\n    }\n  }\n\n  _s(isValid, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  function updateState(func, e) {\n    func(prevState => prevState = e.target.value);\n  } //FIXME: Con't show the error messages\n\n\n  function handleError() {\n    $(function () {\n      $(\"#submit\").on(\"click\", function () {\n        $(\"#companyNameInput\").attr(\"error\", {\n          content: company_name_error\n        });\n        $(\"#companyEmailInput\").attr(\"error\", {\n          content: email_error\n        });\n        $(\"#companyPassInput\").attr(\"error\", {\n          content: pass_error\n        });\n        $(\"#companyConfirmPassInput\").attr(\"error\", {\n          content: confirm_pass_error\n        });\n      });\n    });\n  } //TODO: Check for if the email has already been used\n\n\n  async function postData() {\n    const company = {\n      name: company_name,\n      email: email,\n      city: company_city,\n      password: pass\n    };\n    console.log(company);\n    const response = await fetch(\"/SignUpCompany\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      },\n      body: JSON.stringify(company)\n    });\n\n    if (response.ok) {\n      console.log(\"okkkk\");\n    } else {\n      console.log(\"nöööö\");\n    }\n  }\n\n  function formatCity(data) {\n    var formatted_array = [];\n\n    for (var i = 0; i < data.length; i++) {\n      formatted_array.push({\n        key: data[i]._id,\n        text: data[i].name,\n        value: data[i]._id\n      });\n    }\n\n    return formatted_array;\n  }\n\n  async function getCity() {\n    const response = await fetch(\"/GetCity\");\n    const data = await response.json();\n    const city = formatCity(data);\n    console.log(city);\n    setCity(prevData => prevData = city);\n    setLoaded(prevData => prevData = true);\n  }\n\n  function hasError() {\n    if (company_name_error === null || email_error === null || pass_error === null || confirm_pass_error === null || company_city !== null) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    isValid();\n\n    if (!hasError()) {\n      postData();\n\n      try {\n        setError(prevState => prevState = \"\");\n        setLoading(true);\n        await signup(email, pass);\n      } catch {\n        setError(prevState => prevState = \"Failed to create an account on firebase\");\n      }\n\n      setLoading(false);\n    } else {\n      console.log(\"baduıfhsıdf\"); //handleError();\n\n      setError(prevState => prevState = \"Failed to create an account on firebase\");\n    }\n  }\n\n  if (city === null) {\n    getCity();\n  }\n\n  if (loaded === true) {\n    const element = document.getElementById(\"form\");\n    element.classList.remove(\"loading\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      id: \"form\",\n      onSubmit: e => handleSubmit(e),\n      loading: true,\n      children: [error && /*#__PURE__*/_jsxDEV(Message, {\n        message: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form.Input, {\n          id: \"companyNameInput\",\n          fluid: true,\n          label: \"Company Name\",\n          placeholder: \"Name\",\n          value: company_name,\n          onChange: e => updateState(setCompanyName, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form.Input, {\n          id: \"companyEmailInput\",\n          fluid: true,\n          type: \"email\",\n          label: \"Company Email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => updateState(setEmail, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form.Select, {\n          fluid: true,\n          selection: true,\n          label: \"C\\u0130ty\",\n          options: city,\n          placeholder: \"City\",\n          onChange: (e, {\n            value\n          }) => setCompanyCity(prevData => prevData = value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form.Input, {\n          id: \"companyPassInput\",\n          fluid: true,\n          label: \"Enter Password\",\n          type: \"password\",\n          value: pass,\n          onChange: e => updateState(setPass, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form.Input, {\n          id: \"companyConfirmPassInput\",\n          fluid: true,\n          label: \"Confirm Password\",\n          type: \"password\",\n          value: confirm_pass,\n          onChange: e => updateState(setConfirmPass, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Button, {\n        id: \"submit\",\n        disabled: loading,\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s2(SignUpFormCompany, \"51AfgcrCa38XJfEiAwK8yITiE2A=\", false, function () {\n  return [useAuth];\n});\n\n_c = SignUpFormCompany;\nexport default SignUpFormCompany;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpFormCompany\");","map":{"version":3,"sources":["C:/Users/akgun/Desktop/PlaDat/pladat/src/components/SignUpFormCompany.js"],"names":["React","useState","Form","$","useAuth","Message","SignUpFormCompany","company_name","setCompanyName","email","setEmail","company_city","setCompanyCity","pass","setPass","confirm_pass","setConfirmPass","company_name_error","setCompanyNameError","email_error","setEmailError","pass_error","setPassError","confirm_pass_error","setConfirmPassError","city","setCity","loaded","setLoaded","error","setError","loading","setLoading","signup","isValid","format","hasUpper","str","test","prevState","useEffect","push","length","concat","updateState","func","e","target","value","handleError","on","attr","content","postData","company","name","password","console","log","response","fetch","method","headers","body","JSON","stringify","ok","formatCity","data","formatted_array","i","key","_id","text","getCity","json","prevData","hasError","handleSubmit","preventDefault","element","document","getElementById","classList","remove"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport $ from \"jquery\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport Message from \"./Message\";\r\n\r\nfunction SignUpFormCompany() {\r\n  const [company_name, setCompanyName] = useState(null);\r\n  const [email, setEmail] = useState(null);\r\n  const [company_city, setCompanyCity] = useState(null);\r\n  const [pass, setPass] = useState(null);\r\n  const [confirm_pass, setConfirmPass] = useState(null);\r\n  const [company_name_error, setCompanyNameError] = useState(null);\r\n  const [email_error, setEmailError] = useState(null);\r\n  const [pass_error, setPassError] = useState([]);\r\n  const [confirm_pass_error, setConfirmPassError] = useState(null);\r\n  const [city, setCity] = useState(null);\r\n  const [loaded, setLoaded] = useState(false); //for form select values\r\n  const [error, setError] = useState();\r\n  const [loading, setLoading] = useState(false); //for firebase\r\n  const { signup } = useAuth();\r\n\r\n  function isValid() {\r\n    var format = /[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\r\n    function hasUpper(str) {\r\n      return /[A-Z]/.test(str);\r\n    }\r\n    if (!company_name) {\r\n      setCompanyNameError(\r\n        (prevState) => (prevState = \"Company name is required\")\r\n      );\r\n    }\r\n    if (!email) {\r\n      setEmailError((prevState) => (prevState = \"Email required\"));\r\n    } else if (!/^[A-Z0-9._%+-]+@[[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(email)) {\r\n      setEmailError((prevState) => (prevState = \"Email is invalid\"));\r\n    }\r\n    if (!pass) {\r\n      useEffect(() => {\r\n        // Should not ever set state during rendering, so do this in useEffect instead.\r\n        setPassError((prevState) => prevState.push(\"Password is required\"));\r\n      }, []);\r\n    }\r\n    if (pass.length < 8) {\r\n      setPassError((prevState) =>\r\n        prevState.concat(\"Password needs to be at least 8 characters\\n\")\r\n      );\r\n    }\r\n    if (!format.test(pass)) {\r\n      setPassError((prevState) =>\r\n        prevState.concat(\r\n          \"Passwords must contain at least one special character\\n\"\r\n        )\r\n      );\r\n    }\r\n    if (!hasUpper(pass)) {\r\n      setPassError((prevState) =>\r\n        prevState.concat(\r\n          \"Password must contain at leat one upper case character\\n\"\r\n        )\r\n      );\r\n    }\r\n    if (!confirm_pass) {\r\n      setConfirmPassError(\r\n        (prevState) => (prevState = \"This field is required\")\r\n      );\r\n    } else if (pass !== confirm_pass) {\r\n      setConfirmPassError((prevState) => (prevState = \"Passwords must match\"));\r\n    }\r\n  }\r\n\r\n  function updateState(func, e) {\r\n    func((prevState) => (prevState = e.target.value));\r\n  }\r\n\r\n  //FIXME: Con't show the error messages\r\n  function handleError() {\r\n    $(function () {\r\n      $(\"#submit\").on(\"click\", function () {\r\n        $(\"#companyNameInput\").attr(\"error\", { content: company_name_error });\r\n        $(\"#companyEmailInput\").attr(\"error\", { content: email_error });\r\n        $(\"#companyPassInput\").attr(\"error\", { content: pass_error });\r\n        $(\"#companyConfirmPassInput\").attr(\"error\", {\r\n          content: confirm_pass_error,\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  //TODO: Check for if the email has already been used\r\n  async function postData() {\r\n    const company = {\r\n      name: company_name,\r\n      email: email,\r\n      city: company_city,\r\n      password: pass,\r\n    };\r\n    console.log(company);\r\n    const response = await fetch(\"/SignUpCompany\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n      },\r\n      body: JSON.stringify(company),\r\n    });\r\n    if (response.ok) {\r\n      console.log(\"okkkk\");\r\n    } else {\r\n      console.log(\"nöööö\");\r\n    }\r\n  }\r\n\r\n  function formatCity(data) {\r\n    var formatted_array = [];\r\n    for (var i = 0; i < data.length; i++) {\r\n      formatted_array.push({\r\n        key: data[i]._id,\r\n        text: data[i].name,\r\n        value: data[i]._id,\r\n      });\r\n    }\r\n    return formatted_array;\r\n  }\r\n\r\n  async function getCity() {\r\n    const response = await fetch(\"/GetCity\");\r\n    const data = await response.json();\r\n    const city = formatCity(data);\r\n    console.log(city);\r\n    setCity((prevData) => (prevData = city));\r\n    setLoaded((prevData) => (prevData = true));\r\n  }\r\n\r\n  function hasError() {\r\n    if (\r\n      company_name_error === null ||\r\n      email_error === null ||\r\n      pass_error === null ||\r\n      confirm_pass_error === null ||\r\n      company_city !== null\r\n    ) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    isValid();\r\n    if (!hasError()) {\r\n      postData();\r\n      try {\r\n        setError((prevState) => (prevState = \"\"));\r\n        setLoading(true);\r\n        await signup(email, pass);\r\n      } catch {\r\n        setError(\r\n          (prevState) => (prevState = \"Failed to create an account on firebase\")\r\n        );\r\n      }\r\n      setLoading(false);\r\n    } else {\r\n      console.log(\"baduıfhsıdf\");\r\n      //handleError();\r\n      setError(\r\n        (prevState) => (prevState = \"Failed to create an account on firebase\")\r\n      );\r\n    }\r\n  }\r\n\r\n  if (city === null) {\r\n    getCity();\r\n  }\r\n  if (loaded === true) {\r\n    const element = document.getElementById(\"form\");\r\n    element.classList.remove(\"loading\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form id=\"form\" onSubmit={(e) => handleSubmit(e)} loading>\r\n        {error && <Message message={error} />}\r\n        <div>\r\n          <Form.Input\r\n            id=\"companyNameInput\"\r\n            fluid\r\n            label=\"Company Name\"\r\n            placeholder=\"Name\"\r\n            value={company_name}\r\n            onChange={(e) => updateState(setCompanyName, e)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Form.Input\r\n            id=\"companyEmailInput\"\r\n            fluid\r\n            type=\"email\"\r\n            label=\"Company Email\"\r\n            placeholder=\"Email\"\r\n            value={email}\r\n            onChange={(e) => updateState(setEmail, e)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Form.Select\r\n            fluid\r\n            selection\r\n            label=\"Cİty\"\r\n            options={city}\r\n            placeholder=\"City\"\r\n            onChange={(e, { value }) =>\r\n              setCompanyCity((prevData) => (prevData = value))\r\n            }\r\n          />\r\n        </div>\r\n        <div>\r\n          <Form.Input\r\n            id=\"companyPassInput\"\r\n            fluid\r\n            label=\"Enter Password\"\r\n            type=\"password\"\r\n            value={pass}\r\n            onChange={(e) => updateState(setPass, e)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Form.Input\r\n            id=\"companyConfirmPassInput\"\r\n            fluid\r\n            label=\"Confirm Password\"\r\n            type=\"password\"\r\n            value={confirm_pass}\r\n            onChange={(e) => updateState(setConfirmPass, e)}\r\n          />\r\n        </div>\r\n        <Form.Button id=\"submit\" disabled={loading}>\r\n          Sign Up\r\n        </Form.Button>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SignUpFormCompany;\r\n"]},"metadata":{},"sourceType":"module"}