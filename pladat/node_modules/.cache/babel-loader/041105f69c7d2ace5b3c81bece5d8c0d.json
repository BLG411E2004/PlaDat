{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\akgun\\\\Desktop\\\\PlaDat\\\\pladat\\\\src\\\\components\\\\SignUpFormCompany.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form } from 'semantic-ui-react';\n\nfunction SignUpFormCompany() {\n  _s();\n\n  const [company_name, setCompanyName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [pass, setPass] = useState(\"\");\n  const [confirm_pass, setConfirmPass] = useState(\"\");\n  const {\n    error,\n    setError\n  } = useState({\n    \"company_name\": \"\",\n    \"email\": \"\",\n    \"password\": [],\n    \"confirm_password\": \"\"\n  });\n\n  function isValid() {\n    let errors = {};\n    var format = /[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n\n    function hasUpper(str) {\n      return /[A-Z]/.test(str);\n    }\n\n    if (!company_name.trim()) {\n      setError.company_name = \"Name required\";\n    }\n\n    if (!email.trim()) {\n      setError.email = \"Email required\";\n    } else if (!/^[A-Z0-9._%+-]+@[[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(email)) {\n      setError.email = \"Email is invalid\";\n    }\n\n    if (!pass) {\n      setError.password = \"Password is required\";\n    }\n\n    if (pass.length < 8) {\n      setError.password.push = \"Password needs to be at least 8 characters\";\n    }\n\n    if (!format.test(pass)) {\n      setError.password.push = \"Passwords must contain at least one special character\";\n    }\n\n    if (!hasUpper(pass)) {\n      setError.password.push = \"Password must contain at leat one upper case character\";\n    }\n\n    if (!confirm_pass) {\n      setError.confirm_password = \"This field is reuired\";\n    } else if (pass !== confirm_pass) {\n      setError.confirm_password = \"Passwords must match\";\n    }\n\n    return errors;\n  }\n\n  function updateState(func, e) {\n    func(prevState => prevState = e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    let err = isValid();\n    console.log(err);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: e => handleSubmit(e),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Form.Input, {\n        fluid: true,\n        id: \"company_name\",\n        label: \"Company Name\",\n        placeholder: \"Name\",\n        value: company_name,\n        onChange: e => updateState(setCompanyName, e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n      fluid: true,\n      id: \"email\",\n      type: \"email\",\n      label: \"Company Email\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => updateState(setEmail, e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n      fluid: true,\n      id: \"pass\",\n      label: \"Enter Password\",\n      type: \"password\",\n      value: pass,\n      onChange: e => updateState(setPass, e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n      fluid: true,\n      id: \"confirm_pass\",\n      label: \"Confirm Password\",\n      type: \"password\",\n      value: confirm_pass,\n      onChange: e => updateState(setConfirmPass, e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Button, {\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignUpFormCompany, \"Ii9hSgOaeVjIBUPBAr9xJAWHzrI=\");\n\n_c = SignUpFormCompany;\nexport default SignUpFormCompany;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpFormCompany\");","map":{"version":3,"sources":["C:/Users/akgun/Desktop/PlaDat/pladat/src/components/SignUpFormCompany.js"],"names":["React","useState","Form","SignUpFormCompany","company_name","setCompanyName","email","setEmail","pass","setPass","confirm_pass","setConfirmPass","error","setError","isValid","errors","format","hasUpper","str","test","trim","password","length","push","confirm_password","updateState","func","e","prevState","target","value","handleSubmit","preventDefault","err","console","log"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport { Form } from 'semantic-ui-react'\r\n\r\nfunction SignUpFormCompany(){\r\n\r\n  const [company_name, setCompanyName] = useState(\"\")\r\n  const [email, setEmail] = useState(\"\")\r\n  const [pass, setPass] = useState(\"\")\r\n  const [confirm_pass, setConfirmPass] = useState(\"\")\r\n  const {error,setError} = useState(\r\n    {\r\n      \"company_name\": \"\",\r\n      \"email\": \"\",\r\n      \"password\": [],\r\n      \"confirm_password\": \"\"\r\n    }\r\n  )\r\n\r\n\r\n\r\n  function isValid(){\r\n    let errors = {};\r\n    var format = /[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\r\n    function hasUpper(str){\r\n      return (/[A-Z]/.test(str))\r\n    }\r\n    if(!company_name.trim()){\r\n      setError.company_name = \"Name required\"\r\n    }\r\n    if(!email.trim()){\r\n      setError.email = \"Email required\"\r\n    }else if(!/^[A-Z0-9._%+-]+@[[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(email)){\r\n      setError.email = \"Email is invalid\";\r\n    }\r\n    if(!pass){\r\n      setError.password = \"Password is required\";\r\n    }if(pass.length < 8){\r\n      setError.password.push = \"Password needs to be at least 8 characters\";\r\n    }if(!format.test(pass)){\r\n      setError.password.push = \"Passwords must contain at least one special character\";\r\n    }if(!hasUpper(pass)){\r\n      setError.password.push = \"Password must contain at leat one upper case character\";\r\n    }\r\n    if(!confirm_pass){\r\n      setError.confirm_password = \"This field is reuired\";\r\n    }else if(pass !== confirm_pass){\r\n      setError.confirm_password = \"Passwords must match\";\r\n    }\r\n    return errors;\r\n  }\r\n\r\n  function updateState(func,e){\r\n    func(prevState => prevState = e.target.value)\r\n  }\r\n\r\n  function handleSubmit(e){\r\n    e.preventDefault();\r\n    let err = isValid();\r\n    console.log(err)\r\n  }\r\n\r\n\r\n  return (\r\n    <Form onSubmit = {e => handleSubmit(e)}>\r\n      <div>\r\n        <Form.Input fluid id=\"company_name\" label='Company Name' placeholder='Name' value={company_name} onChange={e => updateState(setCompanyName,e)}/>\r\n{/*         \r\n        {err.errors.company_name && <p>{err.errors.company_name}</p>} */}\r\n      </div>\r\n      <Form.Input fluid id=\"email\" type=\"email\" label='Company Email' placeholder='Email' value={email} onChange={e => updateState(setEmail,e)}/>\r\n      <Form.Input fluid id=\"pass\" label='Enter Password' type='password' value={pass} onChange={e => updateState(setPass,e)}/>\r\n      <Form.Input fluid id=\"confirm_pass\" label='Confirm Password' type='password' value={confirm_pass} onChange={e => updateState(setConfirmPass,e)}/>\r\n      <Form.Button>Sign Up</Form.Button>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default SignUpFormCompany;"]},"metadata":{},"sourceType":"module"}