{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\akgun\\\\Desktop\\\\PlaDat\\\\pladat\\\\src\\\\components\\\\SignInForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form } from \"semantic-ui-react\";\nimport $ from \"jquery\";\nimport { BrowserRouter as Router, Route, Switch, Link, Redirect } from \"react-router-dom\";\nimport HomePageStudent from \"../Pages/HomePageStudent\";\nimport NotFound from \"../Pages/404Page\";\n\nfunction SignUpFormCompany(props) {\n  _s();\n\n  const [email, setEmail] = useState(null);\n  const [pass, setPass] = useState(null);\n  const [email_error, setEmailError] = useState(null);\n  const [pass_error, setPassError] = useState([]); //TODO: Add proper validation\n\n  function isValid() {\n    var format = /[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n\n    function hasUpper(str) {\n      return /[A-Z]/.test(str);\n    }\n\n    if (!email.trim()) {\n      setEmailError(prevState => prevState = \"Please enter email\");\n    }\n  }\n\n  function updateState(func, e) {\n    func(prevState => prevState = e.target.value);\n  } //FIXME: Con't show the error messages\n\n\n  function handleError() {\n    $(function () {\n      $(\"#submit\").on(\"click\", function () {\n        $(\"#emailInput\").attr(\"error\", {\n          content: email_error\n        });\n        $(\"#passInput\").attr(\"error\", {\n          content: pass_error\n        });\n      });\n    });\n  }\n\n  async function postData() {\n    var response = null;\n    const user = {\n      email: email,\n      password: pass\n    };\n\n    if (props.user == \"student\") {\n      response = await fetch(\"/SignInStudent\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        },\n        body: JSON.stringify(user)\n      });\n    } else {\n      const response = await fetch(\"/SignInCompany\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        },\n        body: JSON.stringify(user)\n      });\n    }\n\n    if (response.ok) {\n      console.log(\"okkkk\");\n    } else {\n      console.log(\"nöööö\");\n    }\n  }\n\n  function hasError() {\n    if (email_error === null || pass_error === null) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  function redirect() {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/StudentHome\",\n          compnent: HomePageStudent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/404NotFound\",\n          component: NotFound\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/404NotFound\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    isValid();\n\n    if (!hasError()) {\n      postData();\n      redirect();\n    } else {\n      handleError();\n    } //handleError();\n\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      id: \"form\",\n      onSubmit: e => handleSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form.Input, {\n          id: \"emailInput\",\n          fluid: true,\n          type: \"email\",\n          label: \"Email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => updateState(setEmail, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form.Input, {\n          id: \"passInput\",\n          fluid: true,\n          label: \"Enter Password\",\n          type: \"password\",\n          value: pass,\n          onChange: e => updateState(setPass, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Button, {\n        id: \"submit\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignUpFormCompany, \"1G5W5gt3WsKVGU8T+UkEEUhEs5I=\");\n\n_c = SignUpFormCompany;\nexport default SignUpFormCompany;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpFormCompany\");","map":{"version":3,"sources":["C:/Users/akgun/Desktop/PlaDat/pladat/src/components/SignInForm.js"],"names":["React","useState","Form","$","BrowserRouter","Router","Route","Switch","Link","Redirect","HomePageStudent","NotFound","SignUpFormCompany","props","email","setEmail","pass","setPass","email_error","setEmailError","pass_error","setPassError","isValid","format","hasUpper","str","test","trim","prevState","updateState","func","e","target","value","handleError","on","attr","content","postData","response","user","password","fetch","method","headers","body","JSON","stringify","ok","console","log","hasError","redirect","handleSubmit","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport $ from \"jquery\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Link,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport HomePageStudent from \"../Pages/HomePageStudent\";\r\nimport NotFound from \"../Pages/404Page\";\r\n\r\nfunction SignUpFormCompany(props) {\r\n  const [email, setEmail] = useState(null);\r\n  const [pass, setPass] = useState(null);\r\n  const [email_error, setEmailError] = useState(null);\r\n  const [pass_error, setPassError] = useState([]);\r\n\r\n  //TODO: Add proper validation\r\n  function isValid() {\r\n    var format = /[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\r\n    function hasUpper(str) {\r\n      return /[A-Z]/.test(str);\r\n    }\r\n    if (!email.trim()) {\r\n      setEmailError((prevState) => (prevState = \"Please enter email\"));\r\n    }\r\n  }\r\n\r\n  function updateState(func, e) {\r\n    func((prevState) => (prevState = e.target.value));\r\n  }\r\n\r\n  //FIXME: Con't show the error messages\r\n  function handleError() {\r\n    $(function () {\r\n      $(\"#submit\").on(\"click\", function () {\r\n        $(\"#emailInput\").attr(\"error\", { content: email_error });\r\n        $(\"#passInput\").attr(\"error\", { content: pass_error });\r\n      });\r\n    });\r\n  }\r\n\r\n  async function postData() {\r\n    var response = null;\r\n    const user = { email: email, password: pass };\r\n    if (props.user == \"student\") {\r\n      response = await fetch(\"/SignInStudent\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-type\": \"application/json; charset=UTF-8\",\r\n        },\r\n        body: JSON.stringify(user),\r\n      });\r\n    } else {\r\n      const response = await fetch(\"/SignInCompany\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-type\": \"application/json; charset=UTF-8\",\r\n        },\r\n        body: JSON.stringify(user),\r\n      });\r\n    }\r\n    if (response.ok) {\r\n      console.log(\"okkkk\");\r\n    } else {\r\n      console.log(\"nöööö\");\r\n    }\r\n  }\r\n\r\n  function hasError() {\r\n    if (email_error === null || pass_error === null) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  function redirect() {\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/StudentHome\" compnent={HomePageStudent}></Route>\r\n          <Route exact path=\"/404NotFound\" component={NotFound} />\r\n          <Redirect to=\"/404NotFound\" />\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    isValid();\r\n    if (!hasError()) {\r\n      postData();\r\n      redirect();\r\n    } else {\r\n      handleError();\r\n    }\r\n    //handleError();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Form id=\"form\" onSubmit={(e) => handleSubmit(e)}>\r\n        <div>\r\n          <Form.Input\r\n            id=\"emailInput\"\r\n            fluid\r\n            type=\"email\"\r\n            label=\"Email\"\r\n            placeholder=\"Email\"\r\n            value={email}\r\n            onChange={(e) => updateState(setEmail, e)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Form.Input\r\n            id=\"passInput\"\r\n            fluid\r\n            label=\"Enter Password\"\r\n            type=\"password\"\r\n            value={pass}\r\n            onChange={(e) => updateState(setPass, e)}\r\n          />\r\n        </div>\r\n        <Form.Button id=\"submit\">Sign In</Form.Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUpFormCompany;\r\n"]},"metadata":{},"sourceType":"module"}