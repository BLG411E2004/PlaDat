{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\akgun\\\\Desktop\\\\PlaDat\\\\pladat\\\\src\\\\components\\\\ResetPassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport { TextField } from \"material-ui-formik-components/TextField\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport Paper from \"@material-ui/core/Paper\";\n\nfunction ForgotPassword() {\n  _s();\n\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(false); //for firebase\n\n  const history = useHistory();\n  const {\n    resetPassword\n  } = useAuth();\n  const signUpSchema = Yup.object().shape({\n    email: Yup.string().email(\"Please enter a valid email\").required(\"Email is required\")\n  }); //TODO: Message for password mail sent\n\n  async function handleSubmit(values) {\n    try {\n      setError(\"\");\n      setLoading(true);\n      await resetPassword(values.email);\n      setTimeout(history.push(\"/Home\"), 10000);\n    } catch {\n      console.log(\"catch\");\n      setError(\"Failed to create an account on firebase\");\n    }\n\n    setLoading(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 2,\n      style: {\n        margin: \"5% 20% 10% 20%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          email: \"\"\n        },\n        onSubmit: handleSubmit,\n        validationSchema: signUpSchema,\n        children: formik => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            required: true,\n            name: \"email\",\n            label: \"Email\",\n            type: \"email\",\n            component: TextField\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            type: \"submit\",\n            disabled: !formik.dirty || !formik.isValid || loading,\n            children: \"Reset Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ForgotPassword, \"Alxs0U8mV2yZHCmhAbQJ9qYW8RM=\", false, function () {\n  return [useHistory, useAuth];\n});\n\n_c = ForgotPassword;\nexport default ForgotPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"sources":["C:/Users/akgun/Desktop/PlaDat/pladat/src/components/ResetPassword.js"],"names":["React","useState","Formik","Form","Field","Yup","TextField","useAuth","Button","useHistory","Link","Paper","ForgotPassword","error","setError","loading","setLoading","history","resetPassword","signUpSchema","object","shape","email","string","required","handleSubmit","values","setTimeout","push","console","log","margin","formik","dirty","isValid"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,QAApC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,SAAT,QAA0B,yCAA1B;AACA,SAASC,OAAT,QAAwB,yBAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,kBAAjC;AACA,OAAOC,KAAP,MAAkB,yBAAlB;;AAEA,SAASC,cAAT,GAA0B;AAAA;;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,EAAlC;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,KAAD,CAAtC,CAFwB,CAEuB;;AAC/C,QAAMgB,OAAO,GAAGR,UAAU,EAA1B;AACA,QAAM;AAAES,IAAAA;AAAF,MAAoBX,OAAO,EAAjC;AACA,QAAMY,YAAY,GAAGd,GAAG,CAACe,MAAJ,GAAaC,KAAb,CAAmB;AACtCC,IAAAA,KAAK,EAAEjB,GAAG,CAACkB,MAAJ,GACJD,KADI,CACE,4BADF,EAEJE,QAFI,CAEK,mBAFL;AAD+B,GAAnB,CAArB,CALwB,CAWxB;;AACA,iBAAeC,YAAf,CAA4BC,MAA5B,EAAoC;AAClC,QAAI;AACFZ,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAME,aAAa,CAACQ,MAAM,CAACJ,KAAR,CAAnB;AACAK,MAAAA,UAAU,CAACV,OAAO,CAACW,IAAR,CAAa,OAAb,CAAD,EAAwB,KAAxB,CAAV;AACD,KALD,CAKE,MAAM;AACNC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAhB,MAAAA,QAAQ,CAAC,yCAAD,CAAR;AACD;;AAEDE,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD;;AAED,sBACE;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,SAAS,EAAE,CAAlB;AAAqB,MAAA,KAAK,EAAE;AAAEe,QAAAA,MAAM,EAAE;AAAV,OAA5B;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,aAAa,EAAE;AACbT,UAAAA,KAAK,EAAE;AADM,SADjB;AAIE,QAAA,QAAQ,EAAEG,YAJZ;AAKE,QAAA,gBAAgB,EAAEN,YALpB;AAAA,kBAOIa,MAAD,iBACC,QAAC,IAAD;AAAA,kCACE,QAAC,KAAD;AACE,YAAA,QAAQ,MADV;AAEE,YAAA,IAAI,EAAC,OAFP;AAGE,YAAA,KAAK,EAAC,OAHR;AAIE,YAAA,IAAI,EAAC,OAJP;AAKE,YAAA,SAAS,EAAE1B;AALb;AAAA;AAAA;AAAA;AAAA,kBADF,eASE,QAAC,MAAD;AACE,YAAA,OAAO,EAAC,WADV;AAEE,YAAA,KAAK,EAAC,SAFR;AAGE,YAAA,IAAI,EAAC,QAHP;AAIE,YAAA,QAAQ,EAAE,CAAC0B,MAAM,CAACC,KAAR,IAAiB,CAACD,MAAM,CAACE,OAAzB,IAAoCnB,OAJhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD;;GA5DQH,c;UAGSH,U,EACUF,O;;;KAJnBK,c;AA8DT,eAAeA,cAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { TextField } from \"material-ui-formik-components/TextField\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nfunction ForgotPassword() {\r\n  const [error, setError] = useState();\r\n  const [loading, setLoading] = useState(false); //for firebase\r\n  const history = useHistory();\r\n  const { resetPassword } = useAuth();\r\n  const signUpSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n      .email(\"Please enter a valid email\")\r\n      .required(\"Email is required\"),\r\n  });\r\n\r\n  //TODO: Message for password mail sent\r\n  async function handleSubmit(values) {\r\n    try {\r\n      setError(\"\");\r\n      setLoading(true);\r\n      await resetPassword(values.email);\r\n      setTimeout(history.push(\"/Home\"), 10000);\r\n    } catch {\r\n      console.log(\"catch\");\r\n      setError(\"Failed to create an account on firebase\");\r\n    }\r\n\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Paper elevation={2} style={{ margin: \"5% 20% 10% 20%\" }}>\r\n        <Formik\r\n          initialValues={{\r\n            email: \"\",\r\n          }}\r\n          onSubmit={handleSubmit}\r\n          validationSchema={signUpSchema}\r\n        >\r\n          {(formik) => (\r\n            <Form>\r\n              <Field\r\n                required\r\n                name=\"email\"\r\n                label=\"Email\"\r\n                type=\"email\"\r\n                component={TextField}\r\n              />\r\n\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                disabled={!formik.dirty || !formik.isValid || loading}\r\n              >\r\n                Reset Password\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ForgotPassword;\r\n"]},"metadata":{},"sourceType":"module"}