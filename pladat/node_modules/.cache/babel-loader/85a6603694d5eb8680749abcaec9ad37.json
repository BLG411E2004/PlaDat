{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\akgun\\\\Desktop\\\\PlaDat\\\\pladat\\\\src\\\\components\\\\SignUpFormCompany.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form } from \"semantic-ui-react\";\nimport $ from \"jquery\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport Message from \"./Message\";\nimport { Link } from \"react-router-dom\";\n\nfunction SignUpFormCompany() {\n  _s();\n\n  const [company_name, setCompanyName] = useState();\n  const [email, setEmail] = useState();\n  const [company_city, setCompanyCity] = useState();\n  const [pass, setPass] = useState();\n  const [confirm_pass, setConfirmPass] = useState();\n  const [company_name_error, setCompanyNameError] = useState();\n  const [email_error, setEmailError] = useState();\n  const [pass_error, setPassError] = useState([]);\n  const [confirm_pass_error, setConfirmPassError] = useState();\n  const [city, setCity] = useState(null);\n  const [loaded, setLoaded] = useState(false); //for form select values\n\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(false); //for firebase\n\n  const {\n    signup\n  } = useAuth();\n\n  function isValid() {\n    var format = /[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n\n    function hasUpper(str) {\n      return /[A-Z]/.test(str);\n    }\n\n    if (!company_name) {\n      setCompanyNameError(\"Company name is required\");\n    }\n\n    if (!email) {\n      setEmailError(\"Email required\");\n    } else if (!/^[A-Z0-9._%+-]+@[[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(email)) {\n      setEmailError(\"Email is invalid\");\n    }\n\n    if (pass === \"\") {\n      setPassError(prevState => {\n        if (pass_error.indexOf(\"Password is required\") === -1) {\n          prevState.push(\"Password is required\");\n        }\n      });\n    }\n\n    if (pass.length < 8) {\n      setPassError(prevState => {\n        if (pass_error.indexOf(\"Password needs to be at least 8 characters\") === -1) {\n          prevState.push(\"Password needs to be at least 8 characters\");\n        }\n      });\n    }\n\n    if (!format.test(pass)) {\n      setPassError(prevState => {\n        if (pass_error.indexOf(\"Passwords must contain at least one special character\") === -1) {\n          prevState.push(\"Passwords must contain at least one special character\");\n        }\n      });\n    }\n\n    if (!hasUpper(pass)) {\n      setPassError(prevState => {\n        if (pass_error.indexOf(\"Password must contain at leat one upper case character\") === -1) {\n          prevState.push(\"Password must contain at leat one upper case character\");\n        }\n      });\n    }\n\n    if (!confirm_pass) {\n      setConfirmPassError(prevState => {\n        prevState = \"This field is required\";\n      });\n    } else if (pass !== confirm_pass) {\n      setConfirmPassError(prevState => {\n        prevState = \"Passwords must match\";\n      });\n    }\n  }\n\n  function updateState(func, e) {\n    func(prevState => prevState = e.target.value);\n  } //FIXME: Con't show the error messages\n\n\n  function handleError() {\n    $(function () {\n      $(\"#submit\").on(\"click\", function () {\n        $(\"#companyNameInput\").attr(\"error\", {\n          content: company_name_error\n        });\n        $(\"#companyEmailInput\").attr(\"error\", {\n          content: email_error\n        });\n        $(\"#companyPassInput\").attr(\"error\", {\n          content: pass_error\n        });\n        $(\"#companyConfirmPassInput\").attr(\"error\", {\n          content: confirm_pass_error\n        });\n      });\n    });\n  } //TODO: Check for if the email has already been used\n\n\n  async function postData() {\n    const company = {\n      name: company_name,\n      email: email,\n      city: company_city,\n      password: pass\n    };\n    const response = await fetch(\"/SignUpCompany\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      },\n      body: JSON.stringify(company)\n    });\n    console.log(response.status);\n\n    if (response.ok) {\n      console.log(\"okkkk\");\n    } else {\n      console.log(\"nöööö\");\n    }\n  }\n\n  function formatCity(data) {\n    var formatted_array = [];\n\n    for (var i = 0; i < data.length; i++) {\n      formatted_array.push({\n        key: data[i]._id,\n        text: data[i].name,\n        value: data[i]._id\n      });\n    }\n\n    return formatted_array;\n  }\n\n  async function getCity() {\n    const response = await fetch(\"/GetCity\");\n    const data = await response.json();\n    const cities = formatCity(data);\n    setCity(cities);\n    setLoaded(true);\n  }\n\n  function hasError() {\n    if (company_name_error === null || email_error === null || pass_error === null || confirm_pass_error === null || company_city !== null) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    isValid();\n\n    if (!hasError()) {\n      postData();\n\n      try {\n        setError(\"\");\n        setLoading(true);\n        await signup(email, pass);\n      } catch {\n        console.log(\"catch\");\n        setError(\"Failed to create an account on firebase\");\n      }\n\n      setLoading(false);\n    } else {\n      setError(\"Failed to create an account on firebase\");\n    }\n  }\n\n  if (city == null) {\n    getCity();\n  }\n\n  if (loaded == true) {\n    const element = document.getElementById(\"form\");\n    element.classList.remove(\"loading\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      id: \"form\",\n      onSubmit: e => handleSubmit(e),\n      loading: true,\n      children: [error && /*#__PURE__*/_jsxDEV(Message, {\n        message: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form.Input, {\n          id: \"companyNameInput\",\n          fluid: true,\n          label: \"Company Name\",\n          placeholder: \"Name\",\n          value: company_name,\n          onChange: e => updateState(setCompanyName, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form.Input, {\n          id: \"companyEmailInput\",\n          fluid: true,\n          type: \"email\",\n          label: \"Company Email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => updateState(setEmail, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form.Select, {\n          fluid: true,\n          selection: true,\n          label: \"City\",\n          options: city,\n          placeholder: \"City\",\n          onChange: (e, {\n            value\n          }) => setCompanyCity(prevData => prevData = value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form.Input, {\n          id: \"companyPassInput\",\n          fluid: true,\n          label: \"Enter Password\",\n          type: \"password\",\n          value: pass,\n          onChange: e => updateState(setPass, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form.Input, {\n          id: \"companyConfirmPassInput\",\n          fluid: true,\n          label: \"Confirm Password\",\n          type: \"password\",\n          value: confirm_pass,\n          onChange: e => updateState(setConfirmPass, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Button, {\n        id: \"submit\",\n        disabled: loading,\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"You already have an account?\", /*#__PURE__*/_jsxDEV(Link, {\n        value: \"signin\",\n        to: \"/Home/SignIn\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SignUpFormCompany, \"/F5jrgo7IstoOUD1477LPaiTW4E=\", false, function () {\n  return [useAuth];\n});\n\n_c = SignUpFormCompany;\nexport default SignUpFormCompany;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpFormCompany\");","map":{"version":3,"sources":["C:/Users/akgun/Desktop/PlaDat/pladat/src/components/SignUpFormCompany.js"],"names":["React","useState","Form","$","useAuth","Message","Link","SignUpFormCompany","company_name","setCompanyName","email","setEmail","company_city","setCompanyCity","pass","setPass","confirm_pass","setConfirmPass","company_name_error","setCompanyNameError","email_error","setEmailError","pass_error","setPassError","confirm_pass_error","setConfirmPassError","city","setCity","loaded","setLoaded","error","setError","loading","setLoading","signup","isValid","format","hasUpper","str","test","prevState","indexOf","push","length","updateState","func","e","target","value","handleError","on","attr","content","postData","company","name","password","response","fetch","method","headers","body","JSON","stringify","console","log","status","ok","formatCity","data","formatted_array","i","key","_id","text","getCity","json","cities","hasError","handleSubmit","preventDefault","element","document","getElementById","classList","remove","prevData"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport $ from \"jquery\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport Message from \"./Message\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction SignUpFormCompany() {\r\n  const [company_name, setCompanyName] = useState();\r\n  const [email, setEmail] = useState();\r\n  const [company_city, setCompanyCity] = useState();\r\n  const [pass, setPass] = useState();\r\n  const [confirm_pass, setConfirmPass] = useState();\r\n  const [company_name_error, setCompanyNameError] = useState();\r\n  const [email_error, setEmailError] = useState();\r\n  const [pass_error, setPassError] = useState([]);\r\n  const [confirm_pass_error, setConfirmPassError] = useState();\r\n  const [city, setCity] = useState(null);\r\n  const [loaded, setLoaded] = useState(false); //for form select values\r\n  const [error, setError] = useState();\r\n  const [loading, setLoading] = useState(false); //for firebase\r\n  const { signup } = useAuth();\r\n\r\n  function isValid() {\r\n    var format = /[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\r\n    function hasUpper(str) {\r\n      return /[A-Z]/.test(str);\r\n    }\r\n    if (!company_name) {\r\n      setCompanyNameError(\"Company name is required\");\r\n    }\r\n    if (!email) {\r\n      setEmailError(\"Email required\");\r\n    } else if (!/^[A-Z0-9._%+-]+@[[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(email)) {\r\n      setEmailError(\"Email is invalid\");\r\n    }\r\n    if (pass === \"\") {\r\n      setPassError((prevState) => {\r\n        if (pass_error.indexOf(\"Password is required\") === -1) {\r\n          prevState.push(\"Password is required\");\r\n        }\r\n      });\r\n    }\r\n    if (pass.length < 8) {\r\n      setPassError((prevState) => {\r\n        if (\r\n          pass_error.indexOf(\"Password needs to be at least 8 characters\") ===\r\n          -1\r\n        ) {\r\n          prevState.push(\"Password needs to be at least 8 characters\");\r\n        }\r\n      });\r\n    }\r\n    if (!format.test(pass)) {\r\n      setPassError((prevState) => {\r\n        if (\r\n          pass_error.indexOf(\r\n            \"Passwords must contain at least one special character\"\r\n          ) === -1\r\n        ) {\r\n          prevState.push(\r\n            \"Passwords must contain at least one special character\"\r\n          );\r\n        }\r\n      });\r\n    }\r\n    if (!hasUpper(pass)) {\r\n      setPassError((prevState) => {\r\n        if (\r\n          pass_error.indexOf(\r\n            \"Password must contain at leat one upper case character\"\r\n          ) === -1\r\n        ) {\r\n          prevState.push(\r\n            \"Password must contain at leat one upper case character\"\r\n          );\r\n        }\r\n      });\r\n    }\r\n    if (!confirm_pass) {\r\n      setConfirmPassError((prevState) => {\r\n        prevState = \"This field is required\";\r\n      });\r\n    } else if (pass !== confirm_pass) {\r\n      setConfirmPassError((prevState) => {\r\n        prevState = \"Passwords must match\";\r\n      });\r\n    }\r\n  }\r\n\r\n  function updateState(func, e) {\r\n    func((prevState) => (prevState = e.target.value));\r\n  }\r\n\r\n  //FIXME: Con't show the error messages\r\n  function handleError() {\r\n    $(function () {\r\n      $(\"#submit\").on(\"click\", function () {\r\n        $(\"#companyNameInput\").attr(\"error\", { content: company_name_error });\r\n        $(\"#companyEmailInput\").attr(\"error\", { content: email_error });\r\n        $(\"#companyPassInput\").attr(\"error\", { content: pass_error });\r\n        $(\"#companyConfirmPassInput\").attr(\"error\", {\r\n          content: confirm_pass_error,\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  //TODO: Check for if the email has already been used\r\n  async function postData() {\r\n    const company = {\r\n      name: company_name,\r\n      email: email,\r\n      city: company_city,\r\n      password: pass,\r\n    };\r\n    const response = await fetch(\"/SignUpCompany\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n      },\r\n      body: JSON.stringify(company),\r\n    });\r\n    console.log(response.status);\r\n    if (response.ok) {\r\n      console.log(\"okkkk\");\r\n    } else {\r\n      console.log(\"nöööö\");\r\n    }\r\n  }\r\n\r\n  function formatCity(data) {\r\n    var formatted_array = [];\r\n    for (var i = 0; i < data.length; i++) {\r\n      formatted_array.push({\r\n        key: data[i]._id,\r\n        text: data[i].name,\r\n        value: data[i]._id,\r\n      });\r\n    }\r\n    return formatted_array;\r\n  }\r\n\r\n  async function getCity() {\r\n    const response = await fetch(\"/GetCity\");\r\n    const data = await response.json();\r\n    const cities = formatCity(data);\r\n\r\n    setCity(cities);\r\n    setLoaded(true);\r\n  }\r\n\r\n  function hasError() {\r\n    if (\r\n      company_name_error === null ||\r\n      email_error === null ||\r\n      pass_error === null ||\r\n      confirm_pass_error === null ||\r\n      company_city !== null\r\n    ) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    isValid();\r\n    if (!hasError()) {\r\n      postData();\r\n      try {\r\n        setError(\"\");\r\n        setLoading(true);\r\n        await signup(email, pass);\r\n      } catch {\r\n        console.log(\"catch\");\r\n        setError(\"Failed to create an account on firebase\");\r\n      }\r\n      setLoading(false);\r\n    } else {\r\n      setError(\"Failed to create an account on firebase\");\r\n    }\r\n  }\r\n\r\n  if (city == null) {\r\n    getCity();\r\n  }\r\n  if (loaded == true) {\r\n    const element = document.getElementById(\"form\");\r\n    element.classList.remove(\"loading\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form id=\"form\" onSubmit={(e) => handleSubmit(e)} loading>\r\n        {error && <Message message={error} />}\r\n        <div>\r\n          <Form.Input\r\n            id=\"companyNameInput\"\r\n            fluid\r\n            label=\"Company Name\"\r\n            placeholder=\"Name\"\r\n            value={company_name}\r\n            onChange={(e) => updateState(setCompanyName, e)}\r\n          />\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <Form.Input\r\n            id=\"companyEmailInput\"\r\n            fluid\r\n            type=\"email\"\r\n            label=\"Company Email\"\r\n            placeholder=\"Email\"\r\n            value={email}\r\n            onChange={(e) => updateState(setEmail, e)}\r\n          />\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <Form.Select\r\n            fluid\r\n            selection\r\n            label=\"City\"\r\n            options={city}\r\n            placeholder=\"City\"\r\n            onChange={(e, { value }) =>\r\n              setCompanyCity((prevData) => (prevData = value))\r\n            }\r\n          />\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <Form.Input\r\n            id=\"companyPassInput\"\r\n            fluid\r\n            label=\"Enter Password\"\r\n            type=\"password\"\r\n            value={pass}\r\n            onChange={(e) => updateState(setPass, e)}\r\n          />\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <Form.Input\r\n            id=\"companyConfirmPassInput\"\r\n            fluid\r\n            label=\"Confirm Password\"\r\n            type=\"password\"\r\n            value={confirm_pass}\r\n            onChange={(e) => updateState(setConfirmPass, e)}\r\n          />\r\n        </div>\r\n        <br />\r\n        <Form.Button id=\"submit\" disabled={loading}>\r\n          Sign Up\r\n        </Form.Button>\r\n      </Form>\r\n      <br />\r\n      <div>\r\n        You already have an account?\r\n        <Link value=\"signin\" to=\"/Home/SignIn\">\r\n          Sign In\r\n        </Link>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SignUpFormCompany;\r\n"]},"metadata":{},"sourceType":"module"}