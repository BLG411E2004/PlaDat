{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\akgun\\\\Desktop\\\\PlaDat\\\\pladat\\\\src\\\\components\\\\supcomp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Formik, Form, Field, useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { TextField } from \"material-ui-formik-components/TextField\";\nimport { Select } from \"material-ui-formik-components/Select\";\nimport Password from \"./FormikField/Password\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\n\nfunction SignUpFormCompanyy() {\n  _s();\n\n  const mockitems = [{\n    label: \"ist\",\n    value: 34\n  }, {\n    label: \"ankara\",\n    value: 6\n  }];\n  const [values, setValues] = useState({\n    name: \"\",\n    email: \"\",\n    city: \"\",\n    password: \"\",\n    showPassword: false\n  });\n\n  const yup = require(\"yup\");\n\n  require(\"yup-password\")(yup);\n\n  const sigUpSchema = Yup.object().shape({\n    name: Yup.string().min(2, \"Company name is too short\").required(\"Company name is required\"),\n    email: Yup.string().email(\"Please enter a valid email\").required(\"Email is required\"),\n    city: Yup.number().required(\"Please select a city\"),\n    password: Yup.string().password().required(\"Password is required\").min(8, \"pass 8\").minLowercase(1, \"has min low\").minUppercase(1, \"has min high\").minNumber(1, \"has min num\").minSymbol(1, \"has min sym\") // confirmPassword: Yup.string().oneOf(\n    //   [Yup.ref(\"password\"), null],\n    //   \"Passwords must match\"\n    // ),\n\n  });\n\n  const handleChange = prop => event => {\n    setValues({ ...values,\n      [prop]: event.target.value\n    });\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values,\n      showPassword: !values.showPassword\n    });\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      name: \"\",\n      city: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    },\n    onSubmit: values => {\n      alert(`Name: ${values.name}\\nCity: ${values.city}\\nEmail: ${values.email}`);\n    },\n    validationSchema: sigUpSchema,\n    children: formik => /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        name: \"name\",\n        label: \"Name\",\n        value: values.name,\n        component: TextField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"email\",\n        label: \"Email\",\n        type: \"email\",\n        value: values.email,\n        component: TextField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        required: true,\n        fullWidth: true,\n        name: \"city\",\n        label: \"City\",\n        value: values.city,\n        options: mockitems,\n        component: Select\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        required: true,\n        fullWidth: true,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"standard-adornment-password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          id: \"standard-adornment-password\",\n          type: values.showPassword ? \"text\" : \"password\",\n          value: values.password,\n          onChange: handleChange(\"password\"),\n          endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"end\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"toggle password visibility\",\n              onClick: handleClickShowPassword,\n              onMouseDown: handleMouseDownPassword,\n              children: values.showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 44\n              }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 61\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !formik.dirty || !formik.isValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignUpFormCompanyy, \"VRbq2SbIYazz3JaFgoU2FjjwBUo=\");\n\n_c = SignUpFormCompanyy;\nexport default SignUpFormCompanyy;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpFormCompanyy\");","map":{"version":3,"sources":["C:/Users/akgun/Desktop/PlaDat/pladat/src/components/supcomp.js"],"names":["React","useState","Formik","Form","Field","useFormik","Yup","TextField","Select","Password","IconButton","Input","InputLabel","InputAdornment","FormControl","Visibility","VisibilityOff","SignUpFormCompanyy","mockitems","label","value","values","setValues","name","email","city","password","showPassword","yup","require","sigUpSchema","object","shape","string","min","required","number","minLowercase","minUppercase","minNumber","minSymbol","handleChange","prop","event","target","handleClickShowPassword","handleMouseDownPassword","preventDefault","confirmPassword","alert","formik","dirty","isValid"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Formik, Form, Field, useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { TextField } from \"material-ui-formik-components/TextField\";\r\nimport { Select } from \"material-ui-formik-components/Select\";\r\nimport Password from \"./FormikField/Password\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\n\r\nfunction SignUpFormCompanyy() {\r\n  const mockitems = [\r\n    { label: \"ist\", value: 34 },\r\n    { label: \"ankara\", value: 6 },\r\n  ];\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    city: \"\",\r\n    password: \"\",\r\n    showPassword: false,\r\n  });\r\n  const yup = require(\"yup\");\r\n  require(\"yup-password\")(yup);\r\n\r\n  const sigUpSchema = Yup.object().shape({\r\n    name: Yup.string()\r\n      .min(2, \"Company name is too short\")\r\n      .required(\"Company name is required\"),\r\n    email: Yup.string()\r\n      .email(\"Please enter a valid email\")\r\n      .required(\"Email is required\"),\r\n    city: Yup.number().required(\"Please select a city\"),\r\n    password: Yup.string()\r\n      .password()\r\n      .required(\"Password is required\")\r\n      .min(8, \"pass 8\")\r\n      .minLowercase(1, \"has min low\")\r\n      .minUppercase(1, \"has min high\")\r\n      .minNumber(1, \"has min num\")\r\n      .minSymbol(1, \"has min sym\"),\r\n    // confirmPassword: Yup.string().oneOf(\r\n    //   [Yup.ref(\"password\"), null],\r\n    //   \"Passwords must match\"\r\n    // ),\r\n  });\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        name: \"\",\r\n        city: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n      }}\r\n      onSubmit={(values) => {\r\n        alert(\r\n          `Name: ${values.name}\\nCity: ${values.city}\\nEmail: ${values.email}`\r\n        );\r\n      }}\r\n      validationSchema={sigUpSchema}\r\n    >\r\n      {(formik) => (\r\n        <Form>\r\n          <Field\r\n            name=\"name\"\r\n            label=\"Name\"\r\n            value={values.name}\r\n            component={TextField}\r\n          />\r\n          <Field\r\n            name=\"email\"\r\n            label=\"Email\"\r\n            type=\"email\"\r\n            value={values.email}\r\n            component={TextField}\r\n          />\r\n          <Field\r\n            required\r\n            fullWidth\r\n            name=\"city\"\r\n            label=\"City\"\r\n            value={values.city}\r\n            options={mockitems}\r\n            component={Select}\r\n          />\r\n          <FormControl required fullWidth>\r\n            <InputLabel htmlFor=\"standard-adornment-password\">\r\n              Password\r\n            </InputLabel>\r\n            <Input\r\n              id=\"standard-adornment-password\"\r\n              type={values.showPassword ? \"text\" : \"password\"}\r\n              value={values.password}\r\n              onChange={handleChange(\"password\")}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={handleClickShowPassword}\r\n                    onMouseDown={handleMouseDownPassword}\r\n                  >\r\n                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n            />\r\n          </FormControl>\r\n          <button type=\"submit\" disabled={!formik.dirty || !formik.isValid}>\r\n            Submit\r\n          </button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default SignUpFormCompanyy;\r\n"]},"metadata":{},"sourceType":"module"}