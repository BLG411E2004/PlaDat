{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\akgun\\\\Desktop\\\\PlaDat\\\\pladat\\\\src\\\\components\\\\SignUpFormCompanyy.js\";\nimport React from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\n\nfunction SignUpFormCompanyy() {\n  const initialValues = {\n    name: \"\",\n    email: \"\",\n    city: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  };\n\n  function handleSubmit(values) {\n    console.log(values);\n  }\n\n  const sigUpSchema = Yup.object().shape({\n    name: Yup.string().min(2, \"Company name is too short\").required(\"Company name is required\"),\n    city: Yup.string().required(\"Please select a city\")\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      onSubmit: handleSubmit,\n      validationSchema: sigUpSchema,\n      children: ({\n        dirty,\n        isValid\n      }) => {\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              name: \"name\",\n              as: \"input\",\n              placeholder: \"Company Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.root,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                className: clsx(classes.margin, classes.textField),\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  htmlFor: \"standard-adornment-password\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  id: \"standard-adornment-password\",\n                  type: showPassword ? \"text\" : \"password\",\n                  value: password,\n                  onChange: handleChange(\"password\"),\n                  endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                    position: \"end\",\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      \"aria-label\": \"toggle password visibility\",\n                      onClick: setShowPassword(prevValue => prevValue = !prevValue),\n                      onMouseDown: handleMouseDownPassword,\n                      children: showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 63,\n                        columnNumber: 45\n                      }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 63,\n                        columnNumber: 62\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 56,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              name: \"city\",\n              as: \"select\",\n              placeholder: \"City\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"empty\",\n                children: \"Select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"ist\",\n                children: \"\\u0130st\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: !dirty || !isValid,\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_c = SignUpFormCompanyy;\nexport default SignUpFormCompanyy;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpFormCompanyy\");","map":{"version":3,"sources":["C:/Users/akgun/Desktop/PlaDat/pladat/src/components/SignUpFormCompanyy.js"],"names":["React","Formik","Form","Field","ErrorMessage","Yup","SignUpFormCompanyy","initialValues","name","email","city","password","confirmPassword","handleSubmit","values","console","log","sigUpSchema","object","shape","string","min","required","dirty","isValid","classes","root","clsx","margin","textField","showPassword","handleChange","setShowPassword","prevValue","handleMouseDownPassword"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nfunction SignUpFormCompanyy() {\r\n  const initialValues = {\r\n    name: \"\",\r\n    email: \"\",\r\n    city: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  };\r\n  function handleSubmit(values) {\r\n    console.log(values);\r\n  }\r\n  const sigUpSchema = Yup.object().shape({\r\n    name: Yup.string()\r\n      .min(2, \"Company name is too short\")\r\n      .required(\"Company name is required\"),\r\n    city: Yup.string().required(\"Please select a city\"),\r\n  });\r\n  return (\r\n    <div>\r\n      <h1>Sign Up</h1>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        onSubmit={handleSubmit}\r\n        validationSchema={sigUpSchema}\r\n      >\r\n        {({ dirty, isValid }) => {\r\n          return (\r\n            <Form>\r\n              <div>\r\n                <Field\r\n                  name=\"name\"\r\n                  as=\"input\"\r\n                  placeholder=\"Company Name\"\r\n                ></Field>\r\n                <ErrorMessage name=\"name\" />\r\n              </div>\r\n              <div className={classes.root}>\r\n                <div>\r\n                  <FormControl\r\n                    className={clsx(classes.margin, classes.textField)}\r\n                  >\r\n                    <InputLabel htmlFor=\"standard-adornment-password\">\r\n                      Password\r\n                    </InputLabel>\r\n                    <Input\r\n                      id=\"standard-adornment-password\"\r\n                      type={showPassword ? \"text\" : \"password\"}\r\n                      value={password}\r\n                      onChange={handleChange(\"password\")}\r\n                      endAdornment={\r\n                        <InputAdornment position=\"end\">\r\n                          <IconButton\r\n                            aria-label=\"toggle password visibility\"\r\n                            onClick={setShowPassword(\r\n                              (prevValue) => (prevValue = !prevValue)\r\n                            )}\r\n                            onMouseDown={handleMouseDownPassword}\r\n                          >\r\n                            {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                          </IconButton>\r\n                        </InputAdornment>\r\n                      }\r\n                    />\r\n                  </FormControl>\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <Field name=\"city\" as=\"select\" placeholder=\"City\">\r\n                  <option value=\"empty\">Select</option>\r\n                  <option value=\"ist\">İst</option>\r\n                </Field>\r\n                <ErrorMessage name=\"name\" />\r\n              </div>\r\n\r\n              <button disabled={!dirty || !isValid} type=\"submit\">\r\n                Submit\r\n              </button>\r\n            </Form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUpFormCompanyy;\r\n"]},"metadata":{},"sourceType":"module"}