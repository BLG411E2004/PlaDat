{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\akgun\\\\Desktop\\\\PlaDat\\\\pladat\\\\src\\\\components\\\\SignUpFormCompany.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form } from 'semantic-ui-react';\nimport $ from \"jquery\";\nimport { findDOMNode, finDOMNode } from \"react-dom\";\n\nfunction SignUpFormCompany() {\n  _s();\n\n  const [company_name, setCompanyName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [pass, setPass] = useState(\"\");\n  const [confirm_pass, setConfirmPass] = useState(\"\");\n  const [company_name_error, setCompanyNameError] = useState(\"\");\n  const [email_error, setEmailError] = useState(\"\");\n  const [pass_error, setPassError] = useState(\"\");\n  const [confirm_pass_error, setConfirmPassError] = useState(\"\");\n\n  function isValid() {\n    var format = /[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n\n    function hasUpper(str) {\n      return /[A-Z]/.test(str);\n    }\n\n    if (!company_name.trim()) {\n      setCompanyNameError(prevState => prevState = \"Company name is required\");\n    }\n\n    if (!email.trim()) {\n      setEmailError(prevState => prevState = \"Email required\");\n    } else if (!/^[A-Z0-9._%+-]+@[[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(email)) {\n      setEmailError(prevState => prevState = \"Email is invalid\");\n    }\n\n    if (!pass) {\n      setPassError(prevState => prevState.concat(\"Password is required\"));\n    }\n\n    if (pass.length < 8) {\n      setPassError(prevState => prevState.concat(\"Password needs to be at least 8 characters\\n\"));\n    }\n\n    if (!format.test(pass)) {\n      setPassError(prevState => prevState.concat(\"Passwords must contain at least one special character\\n\"));\n    }\n\n    if (!hasUpper(pass)) {\n      setPassError(prevState => prevState.concat(\"Password must contain at leat one upper case character\\n\"));\n    }\n\n    if (!confirm_pass) {\n      setConfirmPassError(prevState => prevState = \"This field is reuired\");\n    } else if (pass !== confirm_pass) {\n      setConfirmPassError(prevState => prevState = \"Passwords must match\");\n    }\n  }\n\n  function updateState(func, e) {\n    func(prevState => prevState = e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    isValid(); //postData();\n  }\n\n  function handleError() {\n    $(document).ready(function () {\n      $(\"#submit\").on(\"click\", function () {\n        $(\"#companyNameInput\").attr(\"error\", {\n          content: company_name_error,\n          pointing: 'below'\n        });\n      });\n    });\n  }\n\n  async function postData() {\n    const company = {\n      company_name,\n      email,\n      pass\n    };\n    const response = await fetch(\"/SignUpCompany\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/JSON\"\n      },\n      \"body\": JSON.stringify(company)\n    });\n\n    if (response.ok) {\n      console.log(\"okkkk\");\n    } else {\n      console.log(\"nöööö\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      ref: \"show_error\",\n      onSubmit: e => handleSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form.Input, {\n          id: \"companyNameInput\",\n          fluid: true,\n          id: \"company_name\",\n          label: \"Company Name\",\n          placeholder: \"Name\",\n          value: company_name,\n          onChange: e => updateState(setCompanyName, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form.Input, {\n          error: {\n            content: email_error,\n            pointing: 'below'\n          },\n          fluid: true,\n          id: \"email\",\n          type: \"email\",\n          label: \"Company Email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => updateState(setEmail, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form.Input, {\n          error: {\n            content: pass_error,\n            pointing: 'below'\n          },\n          fluid: true,\n          id: \"pass\",\n          label: \"Enter Password\",\n          type: \"password\",\n          value: pass,\n          onChange: e => updateState(setPass, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form.Input, {\n          error: {\n            content: confirm_pass_error,\n            pointing: 'below'\n          },\n          fluid: true,\n          id: \"confirm_pass\",\n          label: \"Confirm Password\",\n          type: \"password\",\n          value: confirm_pass,\n          onChange: e => updateState(setConfirmPass, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Button, {\n        id: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignUpFormCompany, \"YBRvLsOGLCpcVVmketuhgtFadbU=\");\n\n_c = SignUpFormCompany;\nexport default SignUpFormCompany;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpFormCompany\");","map":{"version":3,"sources":["C:/Users/akgun/Desktop/PlaDat/pladat/src/components/SignUpFormCompany.js"],"names":["React","useState","Form","$","findDOMNode","finDOMNode","SignUpFormCompany","company_name","setCompanyName","email","setEmail","pass","setPass","confirm_pass","setConfirmPass","company_name_error","setCompanyNameError","email_error","setEmailError","pass_error","setPassError","confirm_pass_error","setConfirmPassError","isValid","format","hasUpper","str","test","trim","prevState","concat","length","updateState","func","e","target","value","handleSubmit","preventDefault","handleError","document","ready","on","attr","content","pointing","postData","company","response","fetch","method","headers","JSON","stringify","ok","console","log"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport { Form } from 'semantic-ui-react'\r\nimport $ from \"jquery\";\r\nimport { findDOMNode, finDOMNode } from \"react-dom\"\r\n\r\n\r\n\r\n\r\nfunction SignUpFormCompany(){\r\n\r\n  const [company_name, setCompanyName] = useState(\"\")\r\n  const [email, setEmail] = useState(\"\")\r\n  const [pass, setPass] = useState(\"\")\r\n  const [confirm_pass, setConfirmPass] = useState(\"\")\r\n  const [company_name_error,setCompanyNameError] =useState(\"\")\r\n  const [email_error,setEmailError] =useState(\"\")\r\n  const [pass_error,setPassError] = useState(\"\")\r\n  const [confirm_pass_error,setConfirmPassError] = useState(\"\")\r\n\r\n  function isValid(){\r\n    var format = /[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\r\n    function hasUpper(str){\r\n      return (/[A-Z]/.test(str))\r\n    }\r\n    if(!company_name.trim()){\r\n      setCompanyNameError(prevState => prevState = \"Company name is required\")\r\n    }\r\n    if(!email.trim()){\r\n      setEmailError(prevState => prevState = \"Email required\") \r\n    }else if(!/^[A-Z0-9._%+-]+@[[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(email)){\r\n      setEmailError(prevState => prevState = \"Email is invalid\");\r\n    }\r\n    if(!pass){\r\n\r\n      setPassError(prevState => prevState.concat(\"Password is required\"));\r\n    }if(pass.length < 8){\r\n      setPassError(prevState => prevState.concat(\"Password needs to be at least 8 characters\\n\"));\r\n    }if(!format.test(pass)){\r\n      setPassError(prevState => prevState.concat(\"Passwords must contain at least one special character\\n\"));\r\n    }if(!hasUpper(pass)){\r\n      setPassError(prevState => prevState.concat(\"Password must contain at leat one upper case character\\n\"));\r\n    }\r\n    if(!confirm_pass){\r\n      setConfirmPassError(prevState => prevState = \"This field is reuired\") ;\r\n    }else if(pass !== confirm_pass){\r\n      setConfirmPassError(prevState => prevState = \"Passwords must match\");\r\n    }\r\n  }\r\n\r\n  function updateState(func,e){\r\n    func(prevState => prevState = e.target.value)\r\n  }\r\n\r\n  function handleSubmit(e){\r\n    e.preventDefault();\r\n    isValid();\r\n    //postData();\r\n  }\r\n\r\n  function handleError() {\r\n\r\n    $(document).ready(function(){\r\n      $(\"#submit\").on(\"click\",function(){\r\n        $(\"#companyNameInput\").attr(\"error\",{ content: company_name_error, pointing: 'below' })\r\n      })\r\n    })\r\n  }\r\n\r\n  async function postData(){\r\n    const company = {company_name,email,pass};\r\n    const response = await fetch(\"/SignUpCompany\",{\r\n      method:\"POST\",\r\n      headers:{\r\n        \"Content-type\":\"application/JSON\"\r\n      },\r\n      \"body\":JSON.stringify(company)\r\n    }) \r\n    if(response.ok){\r\n      console.log(\"okkkk\")\r\n    }\r\n    else{\r\n      console.log(\"nöööö\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Form ref= \"show_error\" onSubmit = {e => handleSubmit(e)}>\r\n        <div>\r\n          <Form.Input id = \"companyNameInput\" fluid id=\"company_name\" label='Company Name' placeholder='Name' value={company_name} onChange={e => updateState(setCompanyName,e)}/>\r\n        </div>\r\n        <div>\r\n          <Form.Input error={{ content: email_error, pointing: 'below' }} fluid id=\"email\" type=\"email\" label='Company Email' placeholder='Email' value={email} onChange={e => updateState(setEmail,e)}/>\r\n          \r\n        </div>\r\n        \r\n        <div>\r\n          <Form.Input error={{ content: pass_error, pointing: 'below' }} fluid id=\"pass\" label='Enter Password' type='password' value={pass} onChange={e => updateState(setPass,e)}/>\r\n        \r\n        </div>\r\n        <div>\r\n          <Form.Input error={{ content: confirm_pass_error, pointing: 'below' }} fluid id=\"confirm_pass\" label='Confirm Password' type='password' value={confirm_pass} onChange={e => updateState(setConfirmPass,e)}/>\r\n          \r\n        </div>\r\n        <Form.Button id=\"submit\">Sign Up</Form.Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUpFormCompany;"]},"metadata":{},"sourceType":"module"}