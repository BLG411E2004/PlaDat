{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\akgun\\\\Desktop\\\\PlaDat\\\\pladat\\\\src\\\\components\\\\supcomp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Formik, Form, Field, useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { TextField } from \"material-ui-formik-components/TextField\";\nimport { Select } from \"material-ui-formik-components/Select\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction SignUpFormCompanyy() {\n  _s();\n\n  const [loading, setLoading] = useState(\"block\");\n  const [content, setContent] = useState(\"none\");\n  const [city, setCity] = useState([]);\n  const [error, setError] = useState();\n  const {\n    signup\n  } = useAuth();\n  const [open, setOpen] = useState(true);\n  const sigUpSchema = Yup.object().shape({\n    name: Yup.string().min(2, \"Company name is too short\").required(\"Company name is required\"),\n    email: Yup.string().email(\"Please enter a valid email\").required(\"Email is required\"),\n    city: Yup.number().required(\"Please select a city\"),\n    password: Yup.string().required(\"Password is required\").min(8, \"pass 8\"),\n    confirmPassword: Yup.string().oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\n  });\n\n  function formatCity(data) {\n    var formatted_array = [];\n\n    for (var i = 0; i < data.length; i++) {\n      formatted_array.push({\n        value: data[i]._id,\n        label: data[i].name\n      });\n    }\n\n    return formatted_array;\n  }\n\n  async function getCity() {\n    const response = await fetch(\"/GetCity\");\n    const data = await response.json();\n    const cities = formatCity(data);\n    setCity(cities);\n    console.log(city);\n    setLoading(\"none\");\n    setContent(\"block\");\n  }\n\n  async function postData(company) {\n    const response = await fetch(\"/SignUpCompany\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      },\n      body: JSON.stringify(company)\n    });\n    console.log(response.status);\n\n    if (response.ok) {\n      console.log(\"okkkk\");\n    } else {\n      console.log(\"nöööö\");\n    }\n  }\n\n  async function handleSubmit(values) {\n    postData(values);\n\n    try {\n      setError(\"\");\n      setLoading(true); //await signup(values.email, values.password);\n    } catch {\n      console.log(\"catch\");\n      setOpen(true);\n      setError(\"Failed to create an account on firebase\");\n    }\n\n    setLoading(false);\n  }\n\n  if (city.length < 1) {\n    getCity();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: loading\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Dialog, {\n        open: open,\n        onClose: setOpen(false),\n        \"aria-labelledby\": \"alert-dialog-title\",\n        \"aria-describedby\": \"alert-dialog-description\",\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          id: \"customized-dialog-title\",\n          onClose: setOpen(false),\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"close\",\n            onClick: setOpen(false),\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n            id: \"alert-dialog-description\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: setOpen(false),\n            color: \"primary\",\n            autoFocus: true,\n            children: \"OK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: content\n      },\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          name: \"\",\n          email: \"\",\n          city: \"\",\n          password: \"\",\n          confirmPassword: \"\"\n        },\n        onSubmit: values => handleSubmit(values),\n        validationSchema: sigUpSchema,\n        children: formik => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            name: \"name\",\n            label: \"Name\",\n            component: TextField\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"email\",\n            label: \"Email\",\n            type: \"email\",\n            component: TextField\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            required: true,\n            fullWidth: true,\n            name: \"city\",\n            label: \"City\",\n            options: city,\n            component: Select\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            required: true,\n            fullWidth: true,\n            name: \"password\",\n            label: \"Password\",\n            type: \"password\",\n            component: TextField\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            required: true,\n            fullWidth: true,\n            name: \"confirmPassword\",\n            label: \"Confirm Password\",\n            type: \"password\",\n            component: TextField\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: !formik.dirty || !formik.isValid,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignUpFormCompanyy, \"ftIGCKnBNl70IA/XMaKGyBwP1Do=\", false, function () {\n  return [useAuth];\n});\n\n_c = SignUpFormCompanyy;\nexport default SignUpFormCompanyy;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpFormCompanyy\");","map":{"version":3,"sources":["C:/Users/akgun/Desktop/PlaDat/pladat/src/components/supcomp.js"],"names":["React","useState","Formik","Form","Field","useFormik","Yup","TextField","Select","CircularProgress","useAuth","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","IconButton","CloseIcon","Button","SignUpFormCompanyy","loading","setLoading","content","setContent","city","setCity","error","setError","signup","open","setOpen","sigUpSchema","object","shape","name","string","min","required","email","number","password","confirmPassword","oneOf","ref","formatCity","data","formatted_array","i","length","push","value","_id","label","getCity","response","fetch","json","cities","console","log","postData","company","method","headers","body","JSON","stringify","status","ok","handleSubmit","values","display","formik","dirty","isValid"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,SAA9B,QAA+C,QAA/C;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,SAAT,QAA0B,yCAA1B;AACA,SAASC,MAAT,QAAuB,sCAAvB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,SAASC,OAAT,QAAwB,yBAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,SAASC,kBAAT,GAA8B;AAAA;;AAC5B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAAC,OAAD,CAAtC;AACA,QAAM,CAACqB,OAAD,EAAUC,UAAV,IAAwBtB,QAAQ,CAAC,MAAD,CAAtC;AACA,QAAM,CAACuB,IAAD,EAAOC,OAAP,IAAkBxB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACyB,KAAD,EAAQC,QAAR,IAAoB1B,QAAQ,EAAlC;AACA,QAAM;AAAE2B,IAAAA;AAAF,MAAalB,OAAO,EAA1B;AACA,QAAM,CAACmB,IAAD,EAAOC,OAAP,IAAkB7B,QAAQ,CAAC,IAAD,CAAhC;AAEA,QAAM8B,WAAW,GAAGzB,GAAG,CAAC0B,MAAJ,GAAaC,KAAb,CAAmB;AACrCC,IAAAA,IAAI,EAAE5B,GAAG,CAAC6B,MAAJ,GACHC,GADG,CACC,CADD,EACI,2BADJ,EAEHC,QAFG,CAEM,0BAFN,CAD+B;AAIrCC,IAAAA,KAAK,EAAEhC,GAAG,CAAC6B,MAAJ,GACJG,KADI,CACE,4BADF,EAEJD,QAFI,CAEK,mBAFL,CAJ8B;AAOrCb,IAAAA,IAAI,EAAElB,GAAG,CAACiC,MAAJ,GAAaF,QAAb,CAAsB,sBAAtB,CAP+B;AAQrCG,IAAAA,QAAQ,EAAElC,GAAG,CAAC6B,MAAJ,GAAaE,QAAb,CAAsB,sBAAtB,EAA8CD,GAA9C,CAAkD,CAAlD,EAAqD,QAArD,CAR2B;AASrCK,IAAAA,eAAe,EAAEnC,GAAG,CAAC6B,MAAJ,GAAaO,KAAb,CACf,CAACpC,GAAG,CAACqC,GAAJ,CAAQ,UAAR,CAAD,EAAsB,IAAtB,CADe,EAEf,sBAFe;AAToB,GAAnB,CAApB;;AAeA,WAASC,UAAT,CAAoBC,IAApB,EAA0B;AACxB,QAAIC,eAAe,GAAG,EAAtB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACG,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpCD,MAAAA,eAAe,CAACG,IAAhB,CAAqB;AACnBC,QAAAA,KAAK,EAAEL,IAAI,CAACE,CAAD,CAAJ,CAAQI,GADI;AAEnBC,QAAAA,KAAK,EAAEP,IAAI,CAACE,CAAD,CAAJ,CAAQb;AAFI,OAArB;AAID;;AACD,WAAOY,eAAP;AACD;;AAED,iBAAeO,OAAf,GAAyB;AACvB,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,UAAD,CAA5B;AACA,UAAMV,IAAI,GAAG,MAAMS,QAAQ,CAACE,IAAT,EAAnB;AACA,UAAMC,MAAM,GAAGb,UAAU,CAACC,IAAD,CAAzB;AACApB,IAAAA,OAAO,CAACgC,MAAD,CAAP;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYnC,IAAZ;AACAH,IAAAA,UAAU,CAAC,MAAD,CAAV;AACAE,IAAAA,UAAU,CAAC,OAAD,CAAV;AACD;;AAED,iBAAeqC,QAAf,CAAwBC,OAAxB,EAAiC;AAC/B,UAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAC,gBAAD,EAAmB;AAC7CO,MAAAA,MAAM,EAAE,MADqC;AAE7CC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFoC;AAK7CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,OAAf;AALuC,KAAnB,CAA5B;AAOAH,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACa,MAArB;;AACA,QAAIb,QAAQ,CAACc,EAAb,EAAiB;AACfV,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,KAFD,MAEO;AACLD,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD;AACF;;AAED,iBAAeU,YAAf,CAA4BC,MAA5B,EAAoC;AAClCV,IAAAA,QAAQ,CAACU,MAAD,CAAR;;AACA,QAAI;AACF3C,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAN,MAAAA,UAAU,CAAC,IAAD,CAAV,CAFE,CAGF;AACD,KAJD,CAIE,MAAM;AACNqC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA7B,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAH,MAAAA,QAAQ,CAAC,yCAAD,CAAR;AACD;;AACDN,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD;;AAED,MAAIG,IAAI,CAACwB,MAAL,GAAc,CAAlB,EAAqB;AACnBK,IAAAA,OAAO;AACR;;AACD,sBACE;AAAA,4BACE;AAAK,MAAA,KAAK,EAAE;AAAEkB,QAAAA,OAAO,EAAEnD;AAAX,OAAZ;AAAA,6BACE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,IAAI,EAAES,IADR;AAEE,QAAA,OAAO,EAAEC,OAAO,CAAC,KAAD,CAFlB;AAGE,2BAAgB,oBAHlB;AAIE,4BAAiB,0BAJnB;AAAA,gCAME,QAAC,WAAD;AAAa,UAAA,EAAE,EAAC,yBAAhB;AAA0C,UAAA,OAAO,EAAEA,OAAO,CAAC,KAAD,CAA1D;AAAA,iCACE,QAAC,UAAD;AAAY,0BAAW,OAAvB;AAA+B,YAAA,OAAO,EAAEA,OAAO,CAAC,KAAD,CAA/C;AAAA,mCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBANF,eAYE,QAAC,aAAD;AAAA,iCACE,QAAC,iBAAD;AAAmB,YAAA,EAAE,EAAC,0BAAtB;AAAA,sBACGJ;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAZF,eAiBE,QAAC,aAAD;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAEI,OAAO,CAAC,KAAD,CAAxB;AAAiC,YAAA,KAAK,EAAC,SAAvC;AAAiD,YAAA,SAAS,MAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF,eA6BE;AAAK,MAAA,KAAK,EAAE;AAAEyC,QAAAA,OAAO,EAAEjD;AAAX,OAAZ;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,aAAa,EAAE;AACbY,UAAAA,IAAI,EAAE,EADO;AAEbI,UAAAA,KAAK,EAAE,EAFM;AAGbd,UAAAA,IAAI,EAAE,EAHO;AAIbgB,UAAAA,QAAQ,EAAE,EAJG;AAKbC,UAAAA,eAAe,EAAE;AALJ,SADjB;AAQE,QAAA,QAAQ,EAAG6B,MAAD,IAAYD,YAAY,CAACC,MAAD,CARpC;AASE,QAAA,gBAAgB,EAAEvC,WATpB;AAAA,kBAWIyC,MAAD,iBACC,QAAC,IAAD;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,KAAK,EAAC,MAAzB;AAAgC,YAAA,SAAS,EAAEjE;AAA3C;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AACE,YAAA,IAAI,EAAC,OADP;AAEE,YAAA,KAAK,EAAC,OAFR;AAGE,YAAA,IAAI,EAAC,OAHP;AAIE,YAAA,SAAS,EAAEA;AAJb;AAAA;AAAA;AAAA;AAAA,kBAFF,eAQE,QAAC,KAAD;AACE,YAAA,QAAQ,MADV;AAEE,YAAA,SAAS,MAFX;AAGE,YAAA,IAAI,EAAC,MAHP;AAIE,YAAA,KAAK,EAAC,MAJR;AAKE,YAAA,OAAO,EAAEiB,IALX;AAME,YAAA,SAAS,EAAEhB;AANb;AAAA;AAAA;AAAA;AAAA,kBARF,eAgBE,QAAC,KAAD;AACE,YAAA,QAAQ,MADV;AAEE,YAAA,SAAS,MAFX;AAGE,YAAA,IAAI,EAAC,UAHP;AAIE,YAAA,KAAK,EAAC,UAJR;AAKE,YAAA,IAAI,EAAC,UALP;AAME,YAAA,SAAS,EAAED;AANb;AAAA;AAAA;AAAA;AAAA,kBAhBF,eAwBE,QAAC,KAAD;AACE,YAAA,QAAQ,MADV;AAEE,YAAA,SAAS,MAFX;AAGE,YAAA,IAAI,EAAC,iBAHP;AAIE,YAAA,KAAK,EAAC,kBAJR;AAKE,YAAA,IAAI,EAAC,UALP;AAME,YAAA,SAAS,EAAEA;AANb;AAAA;AAAA;AAAA;AAAA,kBAxBF,eAgCE;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,QAAQ,EAAE,CAACiE,MAAM,CAACC,KAAR,IAAiB,CAACD,MAAM,CAACE,OAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAZJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA7BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoFD;;GAjKQvD,kB;UAKYT,O;;;KALZS,kB;AAmKT,eAAeA,kBAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Formik, Form, Field, useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { TextField } from \"material-ui-formik-components/TextField\";\r\nimport { Select } from \"material-ui-formik-components/Select\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nfunction SignUpFormCompanyy() {\r\n  const [loading, setLoading] = useState(\"block\");\r\n  const [content, setContent] = useState(\"none\");\r\n  const [city, setCity] = useState([]);\r\n  const [error, setError] = useState();\r\n  const { signup } = useAuth();\r\n  const [open, setOpen] = useState(true);\r\n\r\n  const sigUpSchema = Yup.object().shape({\r\n    name: Yup.string()\r\n      .min(2, \"Company name is too short\")\r\n      .required(\"Company name is required\"),\r\n    email: Yup.string()\r\n      .email(\"Please enter a valid email\")\r\n      .required(\"Email is required\"),\r\n    city: Yup.number().required(\"Please select a city\"),\r\n    password: Yup.string().required(\"Password is required\").min(8, \"pass 8\"),\r\n    confirmPassword: Yup.string().oneOf(\r\n      [Yup.ref(\"password\"), null],\r\n      \"Passwords must match\"\r\n    ),\r\n  });\r\n\r\n  function formatCity(data) {\r\n    var formatted_array = [];\r\n    for (var i = 0; i < data.length; i++) {\r\n      formatted_array.push({\r\n        value: data[i]._id,\r\n        label: data[i].name,\r\n      });\r\n    }\r\n    return formatted_array;\r\n  }\r\n\r\n  async function getCity() {\r\n    const response = await fetch(\"/GetCity\");\r\n    const data = await response.json();\r\n    const cities = formatCity(data);\r\n    setCity(cities);\r\n    console.log(city);\r\n    setLoading(\"none\");\r\n    setContent(\"block\");\r\n  }\r\n\r\n  async function postData(company) {\r\n    const response = await fetch(\"/SignUpCompany\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n      },\r\n      body: JSON.stringify(company),\r\n    });\r\n    console.log(response.status);\r\n    if (response.ok) {\r\n      console.log(\"okkkk\");\r\n    } else {\r\n      console.log(\"nöööö\");\r\n    }\r\n  }\r\n\r\n  async function handleSubmit(values) {\r\n    postData(values);\r\n    try {\r\n      setError(\"\");\r\n      setLoading(true);\r\n      //await signup(values.email, values.password);\r\n    } catch {\r\n      console.log(\"catch\");\r\n      setOpen(true);\r\n      setError(\"Failed to create an account on firebase\");\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  if (city.length < 1) {\r\n    getCity();\r\n  }\r\n  return (\r\n    <div>\r\n      <div style={{ display: loading }}>\r\n        <CircularProgress />\r\n      </div>\r\n      <div>\r\n        <Dialog\r\n          open={open}\r\n          onClose={setOpen(false)}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"customized-dialog-title\" onClose={setOpen(false)}>\r\n            <IconButton aria-label=\"close\" onClick={setOpen(false)}>\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </DialogTitle>\r\n\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              {error}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={setOpen(false)} color=\"primary\" autoFocus>\r\n              OK\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n      <div style={{ display: content }}>\r\n        <Formik\r\n          initialValues={{\r\n            name: \"\",\r\n            email: \"\",\r\n            city: \"\",\r\n            password: \"\",\r\n            confirmPassword: \"\",\r\n          }}\r\n          onSubmit={(values) => handleSubmit(values)}\r\n          validationSchema={sigUpSchema}\r\n        >\r\n          {(formik) => (\r\n            <Form>\r\n              <Field name=\"name\" label=\"Name\" component={TextField} />\r\n              <Field\r\n                name=\"email\"\r\n                label=\"Email\"\r\n                type=\"email\"\r\n                component={TextField}\r\n              />\r\n              <Field\r\n                required\r\n                fullWidth\r\n                name=\"city\"\r\n                label=\"City\"\r\n                options={city}\r\n                component={Select}\r\n              />\r\n              <Field\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                component={TextField}\r\n              />\r\n              <Field\r\n                required\r\n                fullWidth\r\n                name=\"confirmPassword\"\r\n                label=\"Confirm Password\"\r\n                type=\"password\"\r\n                component={TextField}\r\n              />\r\n              <button type=\"submit\" disabled={!formik.dirty || !formik.isValid}>\r\n                Submit\r\n              </button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUpFormCompanyy;\r\n"]},"metadata":{},"sourceType":"module"}