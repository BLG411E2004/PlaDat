{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\akgun\\\\Desktop\\\\PlaDat\\\\pladat\\\\src\\\\components\\\\SignUpFormStudent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form } from \"semantic-ui-react\";\nimport $ from \"jquery\";\nimport { Link } from \"react-router-dom\";\n\nfunction SignUpFormCompany() {\n  _s();\n\n  const [name, setName] = useState(null);\n  const [surname, setSurname] = useState(null);\n  const [email, setEmail] = useState(null);\n  const [student_university, setStudentUniversity] = useState(null);\n  const [student_ID, setStudentID] = useState(null);\n  const [pass, setPass] = useState(null);\n  const [confirm_pass, setConfirmPass] = useState(null);\n  const [name_error, setNameError] = useState(null);\n  const [surname_error, setSurnameError] = useState(null);\n  const [email_error, setEmailError] = useState(null);\n  const [student_ID_error, setStudentIDError] = useState(null);\n  const [pass_error, setPassError] = useState([]);\n  const [confirm_pass_error, setConfirmPassError] = useState(null);\n  const [loaded, setLoaded] = useState(false);\n  const [university, setUniversity] = useState(null); //TODO: Add validation criteria for student ID\n\n  function isValid() {\n    var format = /[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n\n    function hasUpper(str) {\n      return /[A-Z]/.test(str);\n    }\n\n    if (!name.trim()) {\n      setNameError(prevState => prevState = \"Name is required\");\n    }\n\n    if (!surname.trim()) {\n      setSurnameError(prevState => prevState = \"Surname is required\");\n    }\n\n    if (!email.trim()) {\n      setEmailError(prevState => prevState = \"Email required\");\n    } else if (!/^[A-Z0-9._%+-]+@[[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(email)) {\n      setEmailError(prevState => prevState = \"Email is invalid\");\n    }\n\n    if (!pass) {\n      setPassError(prevState => prevState.concat(\"Password is required\"));\n    }\n\n    if (pass.length < 8) {\n      setPassError(prevState => prevState.concat(\"Password needs to be at least 8 characters\\n\"));\n    }\n\n    if (!format.test(pass)) {\n      setPassError(prevState => prevState.concat(\"Passwords must contain at least one special character\\n\"));\n    }\n\n    if (!hasUpper(pass)) {\n      setPassError(prevState => prevState.concat(\"Password must contain at leat one upper case character\\n\"));\n    }\n\n    if (!confirm_pass) {\n      setConfirmPassError(prevState => prevState = \"This field is required\");\n    } else if (pass !== confirm_pass) {\n      setConfirmPassError(prevState => prevState = \"Passwords must match\");\n    }\n  }\n\n  function updateState(func, e) {\n    func(prevState => prevState = e.target.value);\n  } //FIXME: Con't show the error messages\n\n\n  function handleError() {\n    $(function () {\n      $(\"#submit\").on(\"click\", function () {\n        $(\"#nameInput\").attr(\"error\", {\n          content: name_error\n        });\n        $(\"#surnameInput\").attr(\"error\", {\n          content: surname_error\n        });\n        $(\"#emailInput\").attr(\"error\", {\n          content: email_error\n        });\n        $(\"#passInput\").attr(\"error\", {\n          content: pass_error\n        });\n        $(\"#confirmPassInput\").attr(\"error\", {\n          content: confirm_pass_error\n        });\n      });\n    });\n  } //TODO: Check for if the email has already been used\n\n\n  async function postData() {\n    const student = {\n      name: name,\n      surname: surname,\n      email: email,\n      university: student_university,\n      studentID: student_ID,\n      password: pass\n    };\n    const response = await fetch(\"/SignUpStudent\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      },\n      body: JSON.stringify(student)\n    });\n\n    if (response.ok) {\n      console.log(\"okkkk\");\n    } else {\n      console.log(\"nöööö\");\n    }\n  }\n\n  function formatUniversity(data) {\n    var formatted_array = [];\n\n    for (var i = 0; i < data.length; i++) {\n      formatted_array.push({\n        key: data[i]._id,\n        text: data[i].name,\n        value: data[i]._id\n      });\n    }\n\n    return formatted_array;\n  }\n\n  async function getUniversity() {\n    const response = await fetch(\"/GetUniversity\");\n    const data = await response.json();\n    const uni = formatUniversity(data);\n    setUniversity(prevData => prevData = uni);\n    setLoaded(prevData => prevData = true);\n  }\n\n  function hasError() {\n    if (name_error === null || surname_error === null || email_error === null || pass_error === null || student_ID_error === null || confirm_pass_error === null || student_university !== null) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    isValid();\n\n    if (!hasError()) {\n      postData();\n    } else {\n      handleError();\n    } //handleError();\n\n  }\n\n  if (university === null) {\n    getUniversity();\n  }\n\n  if (loaded === true) {\n    const element = document.getElementById(\"form\");\n    element.classList.remove(\"loading\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      id: \"form\",\n      onSubmit: e => handleSubmit(e),\n      loading: true,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form.Input, {\n          id: \"nameInput\",\n          fluid: true,\n          label: \"Name\",\n          placeholder: \"Name\",\n          value: name,\n          onChange: e => updateState(setName, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form.Input, {\n          id: \"surnameInput\",\n          fluid: true,\n          label: \"Surname\",\n          placeholder: \"Surname\",\n          value: surname,\n          onChange: e => updateState(setSurname, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form.Input, {\n          id: \"emailInput\",\n          fluid: true,\n          type: \"email\",\n          label: \"Email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => updateState(setEmail, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form.Select, {\n          fluid: true,\n          selection: true,\n          label: \"University\",\n          options: university,\n          placeholder: \"University\",\n          onChange: (e, {\n            value\n          }) => setStudentUniversity(prevData => prevData = value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form.Input, {\n          id: \"studentIDInput\",\n          fluid: true,\n          label: \"Student ID\",\n          placeholder: \"Student ID\",\n          value: student_ID,\n          onChange: e => updateState(setStudentID, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form.Input, {\n          id: \"passInput\",\n          fluid: true,\n          label: \"Enter Password\",\n          type: \"password\",\n          value: pass,\n          onChange: e => updateState(setPass, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form.Input, {\n          id: \"confirmPassInput\",\n          fluid: true,\n          label: \"Confirm Password\",\n          type: \"password\",\n          value: confirm_pass,\n          onChange: e => updateState(setConfirmPass, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Button, {\n        id: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"You already have an account?\", /*#__PURE__*/_jsxDEV(Link, {\n        value: \"signin\",\n        to: \"/Home/SignIn\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignUpFormCompany, \"8ANfM9PuKagge9rOnrP6Cc3lwg0=\");\n\n_c = SignUpFormCompany;\nexport default SignUpFormCompany;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpFormCompany\");","map":{"version":3,"sources":["C:/Users/akgun/Desktop/PlaDat/pladat/src/components/SignUpFormStudent.js"],"names":["React","useState","Form","$","Link","SignUpFormCompany","name","setName","surname","setSurname","email","setEmail","student_university","setStudentUniversity","student_ID","setStudentID","pass","setPass","confirm_pass","setConfirmPass","name_error","setNameError","surname_error","setSurnameError","email_error","setEmailError","student_ID_error","setStudentIDError","pass_error","setPassError","confirm_pass_error","setConfirmPassError","loaded","setLoaded","university","setUniversity","isValid","format","hasUpper","str","test","trim","prevState","concat","length","updateState","func","e","target","value","handleError","on","attr","content","postData","student","studentID","password","response","fetch","method","headers","body","JSON","stringify","ok","console","log","formatUniversity","data","formatted_array","i","push","key","_id","text","getUniversity","json","uni","prevData","hasError","handleSubmit","preventDefault","element","document","getElementById","classList","remove"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport $ from \"jquery\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction SignUpFormCompany() {\r\n  const [name, setName] = useState(null);\r\n  const [surname, setSurname] = useState(null);\r\n  const [email, setEmail] = useState(null);\r\n  const [student_university, setStudentUniversity] = useState(null);\r\n  const [student_ID, setStudentID] = useState(null);\r\n  const [pass, setPass] = useState(null);\r\n  const [confirm_pass, setConfirmPass] = useState(null);\r\n  const [name_error, setNameError] = useState(null);\r\n  const [surname_error, setSurnameError] = useState(null);\r\n  const [email_error, setEmailError] = useState(null);\r\n  const [student_ID_error, setStudentIDError] = useState(null);\r\n  const [pass_error, setPassError] = useState([]);\r\n  const [confirm_pass_error, setConfirmPassError] = useState(null);\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [university, setUniversity] = useState(null);\r\n\r\n  //TODO: Add validation criteria for student ID\r\n  function isValid() {\r\n    var format = /[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\r\n    function hasUpper(str) {\r\n      return /[A-Z]/.test(str);\r\n    }\r\n    if (!name.trim()) {\r\n      setNameError((prevState) => (prevState = \"Name is required\"));\r\n    }\r\n    if (!surname.trim()) {\r\n      setSurnameError((prevState) => (prevState = \"Surname is required\"));\r\n    }\r\n    if (!email.trim()) {\r\n      setEmailError((prevState) => (prevState = \"Email required\"));\r\n    } else if (!/^[A-Z0-9._%+-]+@[[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(email)) {\r\n      setEmailError((prevState) => (prevState = \"Email is invalid\"));\r\n    }\r\n    if (!pass) {\r\n      setPassError((prevState) => prevState.concat(\"Password is required\"));\r\n    }\r\n    if (pass.length < 8) {\r\n      setPassError((prevState) =>\r\n        prevState.concat(\"Password needs to be at least 8 characters\\n\")\r\n      );\r\n    }\r\n    if (!format.test(pass)) {\r\n      setPassError((prevState) =>\r\n        prevState.concat(\r\n          \"Passwords must contain at least one special character\\n\"\r\n        )\r\n      );\r\n    }\r\n    if (!hasUpper(pass)) {\r\n      setPassError((prevState) =>\r\n        prevState.concat(\r\n          \"Password must contain at leat one upper case character\\n\"\r\n        )\r\n      );\r\n    }\r\n    if (!confirm_pass) {\r\n      setConfirmPassError(\r\n        (prevState) => (prevState = \"This field is required\")\r\n      );\r\n    } else if (pass !== confirm_pass) {\r\n      setConfirmPassError((prevState) => (prevState = \"Passwords must match\"));\r\n    }\r\n  }\r\n\r\n  function updateState(func, e) {\r\n    func((prevState) => (prevState = e.target.value));\r\n  }\r\n\r\n  //FIXME: Con't show the error messages\r\n  function handleError() {\r\n    $(function () {\r\n      $(\"#submit\").on(\"click\", function () {\r\n        $(\"#nameInput\").attr(\"error\", { content: name_error });\r\n        $(\"#surnameInput\").attr(\"error\", { content: surname_error });\r\n        $(\"#emailInput\").attr(\"error\", { content: email_error });\r\n        $(\"#passInput\").attr(\"error\", { content: pass_error });\r\n        $(\"#confirmPassInput\").attr(\"error\", { content: confirm_pass_error });\r\n      });\r\n    });\r\n  }\r\n\r\n  //TODO: Check for if the email has already been used\r\n  async function postData() {\r\n    const student = {\r\n      name: name,\r\n      surname: surname,\r\n      email: email,\r\n      university: student_university,\r\n      studentID: student_ID,\r\n      password: pass,\r\n    };\r\n    const response = await fetch(\"/SignUpStudent\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n      },\r\n      body: JSON.stringify(student),\r\n    });\r\n    if (response.ok) {\r\n      console.log(\"okkkk\");\r\n    } else {\r\n      console.log(\"nöööö\");\r\n    }\r\n  }\r\n  function formatUniversity(data) {\r\n    var formatted_array = [];\r\n    for (var i = 0; i < data.length; i++) {\r\n      formatted_array.push({\r\n        key: data[i]._id,\r\n        text: data[i].name,\r\n        value: data[i]._id,\r\n      });\r\n    }\r\n    return formatted_array;\r\n  }\r\n\r\n  async function getUniversity() {\r\n    const response = await fetch(\"/GetUniversity\");\r\n    const data = await response.json();\r\n    const uni = formatUniversity(data);\r\n    setUniversity((prevData) => (prevData = uni));\r\n    setLoaded((prevData) => (prevData = true));\r\n  }\r\n\r\n  function hasError() {\r\n    if (\r\n      name_error === null ||\r\n      surname_error === null ||\r\n      email_error === null ||\r\n      pass_error === null ||\r\n      student_ID_error === null ||\r\n      confirm_pass_error === null ||\r\n      student_university !== null\r\n    ) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    isValid();\r\n    if (!hasError()) {\r\n      postData();\r\n    } else {\r\n      handleError();\r\n    }\r\n    //handleError();\r\n  }\r\n\r\n  if (university === null) {\r\n    getUniversity();\r\n  }\r\n  if (loaded === true) {\r\n    const element = document.getElementById(\"form\");\r\n    element.classList.remove(\"loading\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Form id=\"form\" onSubmit={(e) => handleSubmit(e)} loading>\r\n        <div>\r\n          <Form.Input\r\n            id=\"nameInput\"\r\n            fluid\r\n            label=\"Name\"\r\n            placeholder=\"Name\"\r\n            value={name}\r\n            onChange={(e) => updateState(setName, e)}\r\n          />\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <Form.Input\r\n            id=\"surnameInput\"\r\n            fluid\r\n            label=\"Surname\"\r\n            placeholder=\"Surname\"\r\n            value={surname}\r\n            onChange={(e) => updateState(setSurname, e)}\r\n          />\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <Form.Input\r\n            id=\"emailInput\"\r\n            fluid\r\n            type=\"email\"\r\n            label=\"Email\"\r\n            placeholder=\"Email\"\r\n            value={email}\r\n            onChange={(e) => updateState(setEmail, e)}\r\n          />\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <Form.Select\r\n            fluid\r\n            selection\r\n            label=\"University\"\r\n            options={university}\r\n            placeholder=\"University\"\r\n            onChange={(e, { value }) =>\r\n              setStudentUniversity((prevData) => (prevData = value))\r\n            }\r\n          />\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <Form.Input\r\n            id=\"studentIDInput\"\r\n            fluid\r\n            label=\"Student ID\"\r\n            placeholder=\"Student ID\"\r\n            value={student_ID}\r\n            onChange={(e) => updateState(setStudentID, e)}\r\n          />\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <Form.Input\r\n            id=\"passInput\"\r\n            fluid\r\n            label=\"Enter Password\"\r\n            type=\"password\"\r\n            value={pass}\r\n            onChange={(e) => updateState(setPass, e)}\r\n          />\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <Form.Input\r\n            id=\"confirmPassInput\"\r\n            fluid\r\n            label=\"Confirm Password\"\r\n            type=\"password\"\r\n            value={confirm_pass}\r\n            onChange={(e) => updateState(setConfirmPass, e)}\r\n          />\r\n        </div>\r\n        <br />\r\n        <Form.Button id=\"submit\">Sign Up</Form.Button>\r\n      </Form>\r\n      <br />\r\n      <div>\r\n        You already have an account?\r\n        <Link value=\"signin\" to=\"/Home/SignIn\">\r\n          Sign In\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUpFormCompany;\r\n"]},"metadata":{},"sourceType":"module"}