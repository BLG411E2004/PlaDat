{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\akgun\\\\Desktop\\\\PlaDat\\\\pladat\\\\src\\\\components\\\\SignUpFormCompanyy.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form } from \"semantic-ui-react\";\nimport $ from \"jquery\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport Message from \"./Message\";\nimport { Link } from \"react-router-dom\";\nimport { useFormik } from \"formik\";\n\nfunction SignUpFormCompany() {\n  _s();\n\n  const [city, setCity] = useState(null);\n  const [loaded, setLoaded] = useState(false); //for form select values\n\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(false); //for firebase\n\n  const {\n    signup\n  } = useAuth();\n  const formik = useFormik({\n    initialValues: {\n      companyName: \"\",\n      email: \"\",\n      companyCity: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    },\n    onSubmit: values => {\n      console.log(values);\n    }\n  }); //TODO: Check for if the email has already been used\n\n  async function postData() {\n    const company = {\n      name: company_name,\n      email: email,\n      city: company_city,\n      password: pass\n    };\n    const response = await fetch(\"/SignUpCompany\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      },\n      body: JSON.stringify(company)\n    });\n    console.log(response.status);\n\n    if (response.ok) {\n      console.log(\"okkkk\");\n    } else {\n      console.log(\"nöööö\");\n    }\n  }\n\n  function formatCity(data) {\n    var formatted_array = [];\n\n    for (var i = 0; i < data.length; i++) {\n      formatted_array.push({\n        key: data[i]._id,\n        text: data[i].name,\n        value: data[i]._id\n      });\n    }\n\n    return formatted_array;\n  }\n\n  async function getCity() {\n    const response = await fetch(\"/GetCity\");\n    const data = await response.json();\n    const cities = formatCity(data);\n    setCity(cities);\n    setLoaded(true);\n  }\n\n  function hasError() {\n    if (company_name_error === null || email_error === null || pass_error === null || confirm_pass_error === null || company_city !== null) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    formik.handleSubmit();\n  }\n\n  if (city == null) {\n    getCity();\n  }\n\n  if (loaded == true) {\n    const element = document.getElementById(\"form\");\n    element.classList.remove(\"loading\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      id: \"form\",\n      onSubmit: e => handleSubmit(e),\n      loading: true,\n      children: [error && /*#__PURE__*/_jsxDEV(Message, {\n        message: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form.Input, {\n          id: \"companyNameInput\",\n          fluid: true,\n          name: \"companyName\",\n          label: \"Company Name\",\n          placeholder: \"Name\",\n          value: formik.values.companyName,\n          onChange: formik.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form.Input, {\n          id: \"companyEmailInput\",\n          fluid: true,\n          type: \"email\",\n          name: \"email\",\n          label: \"Company Email\",\n          placeholder: \"Email\",\n          value: formik.values.email,\n          onChange: formik.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form.Select, {\n          fluid: true,\n          selection: true,\n          label: \"City\",\n          name: \"companyCity\",\n          options: city,\n          placeholder: \"City\",\n          value: formik.values.companyCity,\n          onChange: formik.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form.Input, {\n          id: \"companyPassInput\",\n          fluid: true,\n          label: \"Enter Password\",\n          name: \"password\",\n          type: \"password\",\n          value: formik.values.password,\n          onChange: formik.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form.Input, {\n          id: \"companyConfirmPassInput\",\n          fluid: true,\n          name: \"confirmPassword\",\n          label: \"Confirm Password\",\n          type: \"password\",\n          value: formik.values.confirmPassword,\n          onChange: formik.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Button, {\n        id: \"submit\",\n        disabled: loading,\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"You already have an account?\", /*#__PURE__*/_jsxDEV(Link, {\n        value: \"signin\",\n        to: \"/Home/SignIn\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SignUpFormCompany, \"DmXVF8b5TB5z0L1sah007Q5l3gE=\", false, function () {\n  return [useAuth, useFormik];\n});\n\n_c = SignUpFormCompany;\nexport default SignUpFormCompany;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpFormCompany\");","map":{"version":3,"sources":["C:/Users/akgun/Desktop/PlaDat/pladat/src/components/SignUpFormCompanyy.js"],"names":["React","useState","Form","$","useAuth","Message","Link","useFormik","SignUpFormCompany","city","setCity","loaded","setLoaded","error","setError","loading","setLoading","signup","formik","initialValues","companyName","email","companyCity","password","confirmPassword","onSubmit","values","console","log","postData","company","name","company_name","company_city","pass","response","fetch","method","headers","body","JSON","stringify","status","ok","formatCity","data","formatted_array","i","length","push","key","_id","text","value","getCity","json","cities","hasError","company_name_error","email_error","pass_error","confirm_pass_error","handleSubmit","e","preventDefault","element","document","getElementById","classList","remove","handleChange"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport $ from \"jquery\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport Message from \"./Message\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useFormik } from \"formik\";\r\n\r\nfunction SignUpFormCompany() {\r\n  const [city, setCity] = useState(null);\r\n  const [loaded, setLoaded] = useState(false); //for form select values\r\n  const [error, setError] = useState();\r\n  const [loading, setLoading] = useState(false); //for firebase\r\n  const { signup } = useAuth();\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      companyName: \"\",\r\n      email: \"\",\r\n      companyCity: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n    },\r\n    onSubmit: (values) => {\r\n      console.log(values);\r\n    },\r\n  });\r\n\r\n  //TODO: Check for if the email has already been used\r\n  async function postData() {\r\n    const company = {\r\n      name: company_name,\r\n      email: email,\r\n      city: company_city,\r\n      password: pass,\r\n    };\r\n    const response = await fetch(\"/SignUpCompany\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n      },\r\n      body: JSON.stringify(company),\r\n    });\r\n    console.log(response.status);\r\n    if (response.ok) {\r\n      console.log(\"okkkk\");\r\n    } else {\r\n      console.log(\"nöööö\");\r\n    }\r\n  }\r\n\r\n  function formatCity(data) {\r\n    var formatted_array = [];\r\n    for (var i = 0; i < data.length; i++) {\r\n      formatted_array.push({\r\n        key: data[i]._id,\r\n        text: data[i].name,\r\n        value: data[i]._id,\r\n      });\r\n    }\r\n    return formatted_array;\r\n  }\r\n\r\n  async function getCity() {\r\n    const response = await fetch(\"/GetCity\");\r\n    const data = await response.json();\r\n    const cities = formatCity(data);\r\n\r\n    setCity(cities);\r\n    setLoaded(true);\r\n  }\r\n\r\n  function hasError() {\r\n    if (\r\n      company_name_error === null ||\r\n      email_error === null ||\r\n      pass_error === null ||\r\n      confirm_pass_error === null ||\r\n      company_city !== null\r\n    ) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    formik.handleSubmit();\r\n  }\r\n\r\n  if (city == null) {\r\n    getCity();\r\n  }\r\n  if (loaded == true) {\r\n    const element = document.getElementById(\"form\");\r\n    element.classList.remove(\"loading\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form id=\"form\" onSubmit={(e) => handleSubmit(e)} loading>\r\n        {error && <Message message={error} />}\r\n        <div>\r\n          <Form.Input\r\n            id=\"companyNameInput\"\r\n            fluid\r\n            name=\"companyName\"\r\n            label=\"Company Name\"\r\n            placeholder=\"Name\"\r\n            value={formik.values.companyName}\r\n            onChange={formik.handleChange}\r\n          />\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <Form.Input\r\n            id=\"companyEmailInput\"\r\n            fluid\r\n            type=\"email\"\r\n            name=\"email\"\r\n            label=\"Company Email\"\r\n            placeholder=\"Email\"\r\n            value={formik.values.email}\r\n            onChange={formik.handleChange}\r\n          />\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <Form.Select\r\n            fluid\r\n            selection\r\n            label=\"City\"\r\n            name=\"companyCity\"\r\n            options={city}\r\n            placeholder=\"City\"\r\n            value={formik.values.companyCity}\r\n            onChange={formik.handleChange}\r\n          />\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <Form.Input\r\n            id=\"companyPassInput\"\r\n            fluid\r\n            label=\"Enter Password\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            value={formik.values.password}\r\n            onChange={formik.handleChange}\r\n          />\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <Form.Input\r\n            id=\"companyConfirmPassInput\"\r\n            fluid\r\n            name=\"confirmPassword\"\r\n            label=\"Confirm Password\"\r\n            type=\"password\"\r\n            value={formik.values.confirmPassword}\r\n            onChange={formik.handleChange}\r\n          />\r\n        </div>\r\n        <br />\r\n        <Form.Button id=\"submit\" disabled={loading}>\r\n          Sign Up\r\n        </Form.Button>\r\n      </Form>\r\n      <br />\r\n      <div>\r\n        You already have an account?\r\n        <Link value=\"signin\" to=\"/Home/SignIn\">\r\n          Sign In\r\n        </Link>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SignUpFormCompany;\r\n"]},"metadata":{},"sourceType":"module"}