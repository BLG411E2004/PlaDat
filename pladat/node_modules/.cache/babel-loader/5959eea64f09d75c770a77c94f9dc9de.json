{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\akgun\\\\Desktop\\\\PlaDat\\\\pladat\\\\src\\\\components\\\\SignUpFormStudent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form } from 'semantic-ui-react';\nimport $ from \"jquery\";\n\nfunction SignUpFormCompany() {\n  _s();\n\n  const [name, setName] = useState(null);\n  const [surname, setSurname] = useState(null);\n  const [email, setEmail] = useState(null);\n  const [pass, setPass] = useState(null);\n  const [confirm_pass, setConfirmPass] = useState(null);\n  const [name_error, setNameError] = useState(null);\n  const [surname_error, setSurnameError] = useState(null);\n  const [email_error, setEmailError] = useState(null);\n  const [pass_error, setPassError] = useState([]);\n  const [confirm_pass_error, setConfirmPassError] = useState(null);\n  const [loaded, setLoaded] = useState(false);\n  const [university, setUniversity] = useState([]);\n\n  function isValid() {\n    var format = /[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n\n    function hasUpper(str) {\n      return /[A-Z]/.test(str);\n    }\n\n    if (!name.trim()) {\n      setNameError(prevState => prevState = \"Name is required\");\n    }\n\n    if (!surname.trim()) {\n      setSurnameError(prevState => prevState = \"Surname is required\");\n    }\n\n    if (!email.trim()) {\n      setEmailError(prevState => prevState = \"Email required\");\n    } else if (!/^[A-Z0-9._%+-]+@[[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(email)) {\n      setEmailError(prevState => prevState = \"Email is invalid\");\n    }\n\n    if (!pass) {\n      setPassError(prevState => prevState.concat(\"Password is required\"));\n    }\n\n    if (pass.length < 8) {\n      setPassError(prevState => prevState.concat(\"Password needs to be at least 8 characters\\n\"));\n    }\n\n    if (!format.test(pass)) {\n      setPassError(prevState => prevState.concat(\"Passwords must contain at least one special character\\n\"));\n    }\n\n    if (!hasUpper(pass)) {\n      setPassError(prevState => prevState.concat(\"Password must contain at leat one upper case character\\n\"));\n    }\n\n    if (!confirm_pass) {\n      setConfirmPassError(prevState => prevState = \"This field is required\");\n    } else if (pass !== confirm_pass) {\n      setConfirmPassError(prevState => prevState = \"Passwords must match\");\n    }\n  }\n\n  function updateState(func, e) {\n    func(prevState => prevState = e.target.value);\n  } //FIXME:Con't show the error messages\n\n\n  function handleError() {\n    $(function () {\n      $(\"#submit\").on(\"click\", function () {\n        $(\"#nameInput\").attr(\"error\", {\n          content: name_error\n        });\n        $(\"#surnameInput\").attr(\"error\", {\n          content: surname_error\n        });\n        $(\"#emailInput\").attr(\"error\", {\n          content: email_error\n        });\n        $(\"#passInput\").attr(\"error\", {\n          content: pass_error\n        });\n        $(\"#confirmPassInput\").attr(\"error\", {\n          content: confirm_pass_error\n        });\n      });\n    });\n  }\n\n  async function postData() {\n    const student = {\n      name: name,\n      surname: surname,\n      email: email,\n      password: pass\n    };\n    const response = await fetch(\"/SignUpStudent\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      },\n      \"body\": JSON.stringify(student)\n    });\n\n    if (response.ok) {\n      console.log(\"okkkk\");\n    } else {\n      console.log(\"nöööö\");\n    }\n  }\n\n  function formatUniversity(data) {\n    var formatted_array = [];\n\n    for (var i = 0; i < data.length; i++) {\n      formatted_array.push({\n        key: data[i]._id,\n        text: data[i].name,\n        value: data[i]._id\n      });\n    }\n\n    return formatted_array;\n  }\n\n  async function getCity() {\n    const response = await fetch(\"/GetUniversity\");\n    const data = await response.json();\n    const university = formatUniversity(data);\n    console.log(university);\n    setCity(prevData => prevData = city);\n    setLoaded(prevData => prevData = true);\n  }\n\n  function hasError() {\n    if (name_error === null || surname_error === null || email_error === null || pass_error === null || confirm_pass_error === null || company_city !== null) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    isValid();\n\n    if (!hasError()) {\n      postData();\n    } else {\n      handleError();\n    } //handleError();\n\n  }\n\n  if (city === null) {\n    getCity();\n  }\n\n  if (loaded === true) {\n    const element = document.getElementById(\"form\");\n    element.classList.remove(\"loading\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      id: \"form\",\n      onSubmit: e => handleSubmit(e),\n      loading: true,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form.Input, {\n          id: \"nameInput\",\n          fluid: true,\n          label: \"Name\",\n          placeholder: \"Name\",\n          value: name,\n          onChange: e => updateState(setName, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form.Input, {\n          id: \"surnameInput\",\n          fluid: true,\n          label: \"Surname\",\n          placeholder: \"Surname\",\n          value: surname,\n          onChange: e => updateState(setSurname, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form.Input, {\n          id: \"emailInput\",\n          fluid: true,\n          type: \"email\",\n          label: \"Email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => updateState(setEmail, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form.Input, {\n          id: \"passInput\",\n          fluid: true,\n          label: \"Enter Password\",\n          type: \"password\",\n          value: pass,\n          onChange: e => updateState(setPass, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form.Input, {\n          id: \"confirmPassInput\",\n          fluid: true,\n          label: \"Confirm Password\",\n          type: \"password\",\n          value: confirm_pass,\n          onChange: e => updateState(setConfirmPass, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Button, {\n        id: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignUpFormCompany, \"WvTlp6hjRzP1e5FYmlwVcbrC3GI=\");\n\n_c = SignUpFormCompany;\nexport default SignUpFormCompany;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpFormCompany\");","map":{"version":3,"sources":["C:/Users/akgun/Desktop/PlaDat/pladat/src/components/SignUpFormStudent.js"],"names":["React","useState","Form","$","SignUpFormCompany","name","setName","surname","setSurname","email","setEmail","pass","setPass","confirm_pass","setConfirmPass","name_error","setNameError","surname_error","setSurnameError","email_error","setEmailError","pass_error","setPassError","confirm_pass_error","setConfirmPassError","loaded","setLoaded","university","setUniversity","isValid","format","hasUpper","str","test","trim","prevState","concat","length","updateState","func","e","target","value","handleError","on","attr","content","postData","student","password","response","fetch","method","headers","JSON","stringify","ok","console","log","formatUniversity","data","formatted_array","i","push","key","_id","text","getCity","json","setCity","prevData","city","hasError","company_city","handleSubmit","preventDefault","element","document","getElementById","classList","remove"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport { Form } from 'semantic-ui-react'\r\nimport $ from \"jquery\";\r\n\r\n\r\nfunction SignUpFormCompany(){\r\n\r\n  const [name, setName] = useState(null)\r\n  const [surname, setSurname] = useState(null)\r\n  const [email, setEmail] = useState(null)\r\n  const [pass, setPass] = useState(null)\r\n  const [confirm_pass, setConfirmPass] = useState(null)\r\n  const [name_error,setNameError] =useState(null)\r\n  const [surname_error,setSurnameError] =useState(null)\r\n  const [email_error,setEmailError] =useState(null)\r\n  const [pass_error,setPassError] = useState([])\r\n  const [confirm_pass_error,setConfirmPassError] = useState(null)\r\n  const [loaded,setLoaded] = useState(false);\r\n  const [university, setUniversity] = useState([]);\r\n\r\n  function isValid(){\r\n    var format = /[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\r\n    function hasUpper(str){\r\n      return (/[A-Z]/.test(str))\r\n    }\r\n    if(!name.trim()){\r\n      setNameError(prevState => prevState = \"Name is required\")\r\n    }\r\n    if(!surname.trim()){\r\n      setSurnameError(prevState => prevState = \"Surname is required\")\r\n    }\r\n    if(!email.trim()){\r\n      setEmailError(prevState => prevState = \"Email required\") \r\n    }else if(!/^[A-Z0-9._%+-]+@[[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(email)){\r\n      setEmailError(prevState => prevState = \"Email is invalid\");\r\n    }\r\n    if(!pass){\r\n      setPassError(prevState => prevState.concat(\"Password is required\"));\r\n    }if(pass.length < 8){\r\n      setPassError(prevState => prevState.concat(\"Password needs to be at least 8 characters\\n\"));\r\n    }if(!format.test(pass)){\r\n      setPassError(prevState => prevState.concat(\"Passwords must contain at least one special character\\n\"));\r\n    }if(!hasUpper(pass)){\r\n      setPassError(prevState => prevState.concat(\"Password must contain at leat one upper case character\\n\"));\r\n    }\r\n    if(!confirm_pass){\r\n      setConfirmPassError(prevState => prevState = \"This field is required\") ;\r\n    }else if(pass !== confirm_pass){\r\n      setConfirmPassError(prevState => prevState = \"Passwords must match\");\r\n    }\r\n  }\r\n\r\n  function updateState(func,e){\r\n    func(prevState => prevState = e.target.value)\r\n  }\r\n\r\n  //FIXME:Con't show the error messages\r\n  function handleError() {\r\n    $(function(){\r\n      $(\"#submit\").on(\"click\",function(){\r\n        $(\"#nameInput\").attr(\"error\",{ content: name_error});\r\n        $(\"#surnameInput\").attr(\"error\",{ content: surname_error});\r\n        $(\"#emailInput\").attr(\"error\",{ content: email_error});\r\n        $(\"#passInput\").attr(\"error\",{ content: pass_error});\r\n        $(\"#confirmPassInput\").attr(\"error\",{ content: confirm_pass_error});\r\n      })\r\n    })\r\n    }\r\n\r\n    \r\n  async function postData(){\r\n    const student = {name:name,surname:surname,email:email,password:pass};\r\n    const response = await fetch(\"/SignUpStudent\",{\r\n      method:\"POST\",\r\n      headers:{\r\n        \"Content-type\":\"application/json; charset=UTF-8\"\r\n      },\r\n      \"body\":JSON.stringify(student)\r\n    }) \r\n    if(response.ok){\r\n      console.log(\"okkkk\")\r\n    }\r\n    else{\r\n      console.log(\"nöööö\")\r\n    }\r\n  }\r\n  function formatUniversity(data){\r\n    var formatted_array = []\r\n    for(var i = 0;i<data.length;i++){\r\n      formatted_array.push({key:data[i]._id,text:data[i].name,value:data[i]._id})\r\n    }\r\n    return formatted_array\r\n  }  \r\n\r\n  async function getCity(){\r\n    const response = await fetch(\"/GetUniversity\")\r\n    const data = await response.json()\r\n    const university = formatUniversity(data)\r\n    console.log(university);\r\n    setCity(prevData => prevData = city);\r\n    setLoaded(prevData => prevData = true);\r\n  }\r\n  \r\n  function hasError(){\r\n    if(name_error === null || surname_error === null || email_error === null || pass_error === null || confirm_pass_error === null || company_city !== null){\r\n      return false;\r\n    }\r\n    else{\r\n      return true;\r\n    }\r\n  }\r\n\r\n\r\n  async function handleSubmit(e){\r\n    e.preventDefault();\r\n    isValid();\r\n    if(!hasError()){\r\n      postData();\r\n    }\r\n    else{\r\n      handleError();\r\n    }\r\n    //handleError();\r\n  }\r\n\r\n  if(city === null){\r\n    getCity();\r\n  }\r\n  if(loaded === true){\r\n    const element = document.getElementById(\"form\");\r\n    element.classList.remove(\"loading\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Form id = \"form\" onSubmit = {e => handleSubmit(e)} loading>\r\n        <div>\r\n          <Form.Input id = \"nameInput\" fluid label='Name' placeholder='Name' value={name} onChange={e => updateState(setName,e)}/>\r\n        </div>\r\n        <div>\r\n          <Form.Input id = \"surnameInput\" fluid label='Surname' placeholder='Surname' value={surname} onChange={e => updateState(setSurname,e)}/>\r\n        </div>\r\n        <div>\r\n          <Form.Input id = \"emailInput\" fluid  type=\"email\" label='Email' placeholder='Email' value={email} onChange={e => updateState(setEmail,e)}/>\r\n        </div>       \r\n        <div>\r\n          <Form.Input id = \"passInput\" fluid label='Enter Password' type='password' value={pass} onChange={e => updateState(setPass,e)}/>\r\n        </div>\r\n        <div>\r\n          <Form.Input id = \"confirmPassInput\" fluid label='Confirm Password' type='password' value={confirm_pass} onChange={e => updateState(setConfirmPass,e)}/>\r\n        </div>\r\n        <Form.Button id=\"submit\">Sign Up</Form.Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUpFormCompany;"]},"metadata":{},"sourceType":"module"}