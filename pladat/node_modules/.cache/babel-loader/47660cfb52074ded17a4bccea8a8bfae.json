{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\akgun\\\\Desktop\\\\PlaDat\\\\pladat\\\\src\\\\components\\\\SignUpFormCompanyy.js\";\nimport React, { useState } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport TextInput from \"./FormikField/TextInput\";\nimport Password from \"./FormikField/PasswordInput\";\nimport Pass from \"material-ui-password-field\";\n\nfunction SignUpFormCompanyy() {\n  const initialValues = {\n    name: \"\",\n    email: \"\",\n    city: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  };\n\n  const yup = require(\"yup\");\n\n  require(\"yup-password\")(yup);\n\n  function handleSubmit(values) {\n    console.log(values);\n  }\n\n  const sigUpSchema = Yup.object().shape({\n    name: Yup.string().min(2, \"Company name is too short\").required(\"Company name is required\"),\n    city: Yup.string().required(\"Please select a city\"),\n    password: Yup.string().password().required(\"Password is required\").min(8, \"pass 8\").minLowercase(1, \"has min low\").minUppercase(1, \"has min high\").minNumber(1, \"has min num\").minSymbol(1, \"has min sym\")\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      onSubmit: handleSubmit,\n      validationSchema: sigUpSchema,\n      children: ({\n        dirty,\n        isValid\n      }) => {\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              name: \"city\",\n              as: \"select\",\n              placeholder: \"City\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"empty\",\n                children: \"Select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"ist\",\n                children: \"\\u0130st\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: !dirty || !isValid,\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_c = SignUpFormCompanyy;\nexport default SignUpFormCompanyy;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpFormCompanyy\");","map":{"version":3,"sources":["C:/Users/akgun/Desktop/PlaDat/pladat/src/components/SignUpFormCompanyy.js"],"names":["React","useState","Formik","Form","Field","ErrorMessage","Yup","TextInput","Password","Pass","SignUpFormCompanyy","initialValues","name","email","city","password","confirmPassword","yup","require","handleSubmit","values","console","log","sigUpSchema","object","shape","string","min","required","minLowercase","minUppercase","minNumber","minSymbol","dirty","isValid"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;;AAEA,SAASC,kBAAT,GAA8B;AAC5B,QAAMC,aAAa,GAAG;AACpBC,IAAAA,IAAI,EAAE,EADc;AAEpBC,IAAAA,KAAK,EAAE,EAFa;AAGpBC,IAAAA,IAAI,EAAE,EAHc;AAIpBC,IAAAA,QAAQ,EAAE,EAJU;AAKpBC,IAAAA,eAAe,EAAE;AALG,GAAtB;;AAOA,QAAMC,GAAG,GAAGC,OAAO,CAAC,KAAD,CAAnB;;AACAA,EAAAA,OAAO,CAAC,cAAD,CAAP,CAAwBD,GAAxB;;AAEA,WAASE,YAAT,CAAsBC,MAAtB,EAA8B;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACD;;AACD,QAAMG,WAAW,GAAGjB,GAAG,CAACkB,MAAJ,GAAaC,KAAb,CAAmB;AACrCb,IAAAA,IAAI,EAAEN,GAAG,CAACoB,MAAJ,GACHC,GADG,CACC,CADD,EACI,2BADJ,EAEHC,QAFG,CAEM,0BAFN,CAD+B;AAIrCd,IAAAA,IAAI,EAAER,GAAG,CAACoB,MAAJ,GAAaE,QAAb,CAAsB,sBAAtB,CAJ+B;AAKrCb,IAAAA,QAAQ,EAAET,GAAG,CAACoB,MAAJ,GACPX,QADO,GAEPa,QAFO,CAEE,sBAFF,EAGPD,GAHO,CAGH,CAHG,EAGA,QAHA,EAIPE,YAJO,CAIM,CAJN,EAIS,aAJT,EAKPC,YALO,CAKM,CALN,EAKS,cALT,EAMPC,SANO,CAMG,CANH,EAMM,aANN,EAOPC,SAPO,CAOG,CAPH,EAOM,aAPN;AAL2B,GAAnB,CAApB;AAcA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AACE,MAAA,aAAa,EAAErB,aADjB;AAEE,MAAA,QAAQ,EAAEQ,YAFZ;AAGE,MAAA,gBAAgB,EAAEI,WAHpB;AAAA,gBAKG,CAAC;AAAEU,QAAAA,KAAF;AAASC,QAAAA;AAAT,OAAD,KAAwB;AACvB,4BACE,QAAC,IAAD;AAAA,kCASE;AAAA;AAAA;AAAA;AAAA,kBATF,eAWE;AAAA,oCACE,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,EAAE,EAAC,QAAtB;AAA+B,cAAA,WAAW,EAAC,MAA3C;AAAA,sCACE;AAAQ,gBAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAQ,gBAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAKE,QAAC,YAAD;AAAc,cAAA,IAAI,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,oBALF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXF,eAmBE;AAAQ,YAAA,QAAQ,EAAE,CAACD,KAAD,IAAU,CAACC,OAA7B;AAAsC,YAAA,IAAI,EAAC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAyBD;AA/BH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD;;KAlEQxB,kB;AAoET,eAAeA,kBAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport TextInput from \"./FormikField/TextInput\";\r\nimport Password from \"./FormikField/PasswordInput\";\r\nimport Pass from \"material-ui-password-field\";\r\n\r\nfunction SignUpFormCompanyy() {\r\n  const initialValues = {\r\n    name: \"\",\r\n    email: \"\",\r\n    city: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  };\r\n  const yup = require(\"yup\");\r\n  require(\"yup-password\")(yup);\r\n\r\n  function handleSubmit(values) {\r\n    console.log(values);\r\n  }\r\n  const sigUpSchema = Yup.object().shape({\r\n    name: Yup.string()\r\n      .min(2, \"Company name is too short\")\r\n      .required(\"Company name is required\"),\r\n    city: Yup.string().required(\"Please select a city\"),\r\n    password: Yup.string()\r\n      .password()\r\n      .required(\"Password is required\")\r\n      .min(8, \"pass 8\")\r\n      .minLowercase(1, \"has min low\")\r\n      .minUppercase(1, \"has min high\")\r\n      .minNumber(1, \"has min num\")\r\n      .minSymbol(1, \"has min sym\"),\r\n  });\r\n  return (\r\n    <div>\r\n      <h1>Sign Up</h1>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        onSubmit={handleSubmit}\r\n        validationSchema={sigUpSchema}\r\n      >\r\n        {({ dirty, isValid }) => {\r\n          return (\r\n            <Form>\r\n              {/* <div>\r\n                <Field\r\n                  name=\"name\"\r\n                  as=\"input\"\r\n                  placeholder=\"Company Name\"\r\n                ></Field>\r\n                <ErrorMessage name=\"name\" />\r\n              </div> */}\r\n              <div></div>\r\n\r\n              <div>\r\n                <Field name=\"city\" as=\"select\" placeholder=\"City\">\r\n                  <option value=\"empty\">Select</option>\r\n                  <option value=\"ist\">Ä°st</option>\r\n                </Field>\r\n                <ErrorMessage name=\"name\" />\r\n              </div>\r\n\r\n              <button disabled={!dirty || !isValid} type=\"submit\">\r\n                Submit\r\n              </button>\r\n            </Form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUpFormCompanyy;\r\n"]},"metadata":{},"sourceType":"module"}