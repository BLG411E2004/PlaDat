{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\akgun\\\\Desktop\\\\PlaDat\\\\pladat\\\\src\\\\components\\\\SignInForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form } from \"semantic-ui-react\";\nimport $ from \"jquery\";\nimport { useHistory } from \"react-router-dom\";\nimport auth from \"./Auth\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport Message from \"./Message\";\n\nfunction SignUpFormCompany(props) {\n  _s();\n\n  const [email, setEmail] = useState(null);\n  const [pass, setPass] = useState(null);\n  const [email_error, setEmailError] = useState(null);\n  const [pass_error, setPassError] = useState([]);\n  const [loading, setLoading] = useState(false); //for firebase\n\n  const {\n    signin\n  } = useAuth();\n  const [address, setAddress] = useState();\n  const [error, setError] = useState(); //TODO: Add proper validation\n\n  function isValid() {\n    var format = /[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n\n    if (!email.trim()) {\n      setEmailError(prevState => prevState = \"Please enter email\");\n    }\n  }\n\n  const history = useHistory();\n\n  function redirect(url) {\n    history.push(url);\n  }\n\n  function updateState(func, e) {\n    func(prevState => prevState = e.target.value);\n  } //FIXME: Con't show the error messages\n\n\n  function handleError() {\n    $(function () {\n      $(\"#submit\").on(\"click\", function () {\n        $(\"#emailInput\").attr(\"error\", {\n          content: email_error\n        });\n        $(\"#passInput\").attr(\"error\", {\n          content: pass_error\n        });\n      });\n    });\n  }\n\n  async function postData() {\n    var addressPost = \"\";\n    var response = null;\n    const user = {\n      email: email,\n      password: pass\n    };\n\n    if (props.user === \"student\") {\n      addressPost = \"/SignInStudent\";\n      setAddress(\"/HomeStudent\");\n    } else if (props.user === \"company\") {\n      addressPost = \"/SignInCompany\";\n      setAddress(\"/HomeCompany\");\n    }\n\n    response = await fetch(addressPost, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      },\n      body: JSON.stringify(user)\n    });\n\n    if (response.ok) {\n      console.log(\"okkkk\");\n      auth.login(() => {\n        history.push(address);\n      });\n    } else {\n      //TODO: Put warning according to the code of the response\n      //TODO: Maybe find a better way???\n      console.log(\"nöööö\");\n    }\n  }\n\n  function hasError() {\n    if (email_error === null || pass_error === null) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    isValid();\n\n    if (!hasError()) {\n      postData();\n\n      try {\n        setError(\"\");\n        setLoading(true);\n        await signin(email, pass);\n        redirect(address);\n      } catch {\n        setError(\"Failed to sign in\");\n      }\n\n      setLoading(false);\n    } else {\n      handleError();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      id: \"form\",\n      onSubmit: e => handleSubmit(e),\n      children: [error && /*#__PURE__*/_jsxDEV(Message, {\n        message: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form.Input, {\n          id: \"emailInput\",\n          fluid: true,\n          type: \"email\",\n          label: \"Email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => updateState(setEmail, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form.Input, {\n          id: \"passInput\",\n          fluid: true,\n          label: \"Enter Password\",\n          type: \"password\",\n          value: pass,\n          onChange: e => updateState(setPass, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Button, {\n        id: \"submit\",\n        display: loading,\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(SignUpFormCompany, \"76P4l5tip71oKZHyMgFyxXkeH0I=\", false, function () {\n  return [useAuth, useHistory];\n});\n\n_c = SignUpFormCompany;\nexport default SignUpFormCompany;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpFormCompany\");","map":{"version":3,"sources":["C:/Users/akgun/Desktop/PlaDat/pladat/src/components/SignInForm.js"],"names":["React","useState","Form","$","useHistory","auth","useAuth","Message","SignUpFormCompany","props","email","setEmail","pass","setPass","email_error","setEmailError","pass_error","setPassError","loading","setLoading","signin","address","setAddress","error","setError","isValid","format","trim","prevState","history","redirect","url","push","updateState","func","e","target","value","handleError","on","attr","content","postData","addressPost","response","user","password","fetch","method","headers","body","JSON","stringify","ok","console","log","login","hasError","handleSubmit","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport $ from \"jquery\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport auth from \"./Auth\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport Message from \"./Message\";\r\n\r\nfunction SignUpFormCompany(props) {\r\n  const [email, setEmail] = useState(null);\r\n  const [pass, setPass] = useState(null);\r\n  const [email_error, setEmailError] = useState(null);\r\n  const [pass_error, setPassError] = useState([]);\r\n  const [loading, setLoading] = useState(false); //for firebase\r\n  const { signin } = useAuth();\r\n  const [address, setAddress] = useState();\r\n  const [error, setError] = useState();\r\n\r\n  //TODO: Add proper validation\r\n  function isValid() {\r\n    var format = /[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\r\n    if (!email.trim()) {\r\n      setEmailError((prevState) => (prevState = \"Please enter email\"));\r\n    }\r\n  }\r\n\r\n  const history = useHistory();\r\n  function redirect(url) {\r\n    history.push(url);\r\n  }\r\n\r\n  function updateState(func, e) {\r\n    func((prevState) => (prevState = e.target.value));\r\n  }\r\n\r\n  //FIXME: Con't show the error messages\r\n  function handleError() {\r\n    $(function () {\r\n      $(\"#submit\").on(\"click\", function () {\r\n        $(\"#emailInput\").attr(\"error\", { content: email_error });\r\n        $(\"#passInput\").attr(\"error\", { content: pass_error });\r\n      });\r\n    });\r\n  }\r\n\r\n  async function postData() {\r\n    var addressPost = \"\";\r\n    var response = null;\r\n    const user = { email: email, password: pass };\r\n    if (props.user === \"student\") {\r\n      addressPost = \"/SignInStudent\";\r\n      setAddress(\"/HomeStudent\");\r\n    } else if (props.user === \"company\") {\r\n      addressPost = \"/SignInCompany\";\r\n      setAddress(\"/HomeCompany\");\r\n    }\r\n    response = await fetch(addressPost, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n      },\r\n      body: JSON.stringify(user),\r\n    });\r\n\r\n    if (response.ok) {\r\n      console.log(\"okkkk\");\r\n      auth.login(() => {\r\n        history.push(address);\r\n      });\r\n    } else {\r\n      //TODO: Put warning according to the code of the response\r\n      //TODO: Maybe find a better way???\r\n      console.log(\"nöööö\");\r\n    }\r\n  }\r\n  function hasError() {\r\n    if (email_error === null || pass_error === null) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    isValid();\r\n    if (!hasError()) {\r\n      postData();\r\n      try {\r\n        setError(\"\");\r\n        setLoading(true);\r\n        await signin(email, pass);\r\n        redirect(address);\r\n      } catch {\r\n        setError(\"Failed to sign in\");\r\n      }\r\n      setLoading(false);\r\n    } else {\r\n      handleError();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form id=\"form\" onSubmit={(e) => handleSubmit(e)}>\r\n        {error && <Message message={error} />}\r\n        <div>\r\n          <Form.Input\r\n            id=\"emailInput\"\r\n            fluid\r\n            type=\"email\"\r\n            label=\"Email\"\r\n            placeholder=\"Email\"\r\n            value={email}\r\n            onChange={(e) => updateState(setEmail, e)}\r\n          />\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <Form.Input\r\n            id=\"passInput\"\r\n            fluid\r\n            label=\"Enter Password\"\r\n            type=\"password\"\r\n            value={pass}\r\n            onChange={(e) => updateState(setPass, e)}\r\n          />\r\n        </div>\r\n        <br />\r\n        <Form.Button id=\"submit\" display={loading}>\r\n          Sign In\r\n        </Form.Button>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SignUpFormCompany;\r\n"]},"metadata":{},"sourceType":"module"}