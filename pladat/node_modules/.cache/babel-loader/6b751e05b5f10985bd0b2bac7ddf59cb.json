{"ast":null,"code":"// import React, { useState } from \"react\";\n// import { useHistory, Link } from \"react-router-dom\";\n// import auth from \"./Auth\";\n// import { useAuth } from \"../contexts/AuthContext\";\n// function SignUpFormCompany(props) {\n//   const [email, setEmail] = useState(null);\n//   const [pass, setPass] = useState(null);\n//   const [email_error, setEmailError] = useState(null);\n//   const [pass_error, setPassError] = useState([]);\n//   const [loading, setLoading] = useState(false); //for firebase\n//   const { signin } = useAuth();\n//   const [address, setAddress] = useState();\n//   const [error, setError] = useState();\n//   //TODO: Add proper validation\n//   function isValid() {\n//     var format = /[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n//     if (!email.trim()) {\n//       setEmailError((prevState) => (prevState = \"Please enter email\"));\n//     }\n//   }\n//   const history = useHistory();\n//   function redirect(url) {\n//     history.push(url);\n//   }\n//   function updateState(func, e) {\n//     func((prevState) => (prevState = e.target.value));\n//   }\n//   //FIXME: Con't show the error messages\n//   function handleError() {\n//     $(function () {\n//       $(\"#submit\").on(\"click\", function () {\n//         $(\"#emailInput\").attr(\"error\", { content: email_error });\n//         $(\"#passInput\").attr(\"error\", { content: pass_error });\n//       });\n//     });\n//   }\n//   async function postData() {\n//     var addressPost = \"\";\n//     var response = null;\n//     const user = { email: email, password: pass };\n//     if (props.user === \"student\") {\n//       addressPost = \"/SignInStudent\";\n//       setAddress(\"/HomeStudent\");\n//     } else if (props.user === \"company\") {\n//       addressPost = \"/SignInCompany\";\n//       setAddress(\"/HomeCompany\");\n//     }\n//     response = await fetch(addressPost, {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-type\": \"application/json; charset=UTF-8\",\n//       },\n//       body: JSON.stringify(user),\n//     });\n//     if (response.ok) {\n//       console.log(\"okkkk\");\n//       auth.login(() => {\n//         history.push(address);\n//       });\n//     } else {\n//       //TODO: Put warning according to the code of the response\n//       //TODO: Maybe find a better way???\n//       console.log(\"nöööö\");\n//     }\n//   }\n//   function hasError() {\n//     if (email_error === null || pass_error === null) {\n//       return false;\n//     } else {\n//       return true;\n//     }\n//   }\n//   async function handleSubmit(e) {\n//     e.preventDefault();\n//     isValid();\n//     if (!hasError()) {\n//       postData();\n//       try {\n//         setError(\"\");\n//         setLoading(true);\n//         await signin(email, pass);\n//         redirect(address);\n//       } catch {\n//         setError(\"Failed to sign in\");\n//       }\n//       setLoading(false);\n//     } else {\n//       handleError();\n//     }\n//   }\n//   return (\n//     <>\n//       <Form id=\"form\" onSubmit={(e) => handleSubmit(e)}>\n//         <div>\n//           <Form.Input\n//             id=\"emailInput\"\n//             fluid\n//             type=\"email\"\n//             label=\"Email\"\n//             placeholder=\"Email\"\n//             value={email}\n//             onChange={(e) => updateState(setEmail, e)}\n//           />\n//         </div>\n//         <br />\n//         <div>\n//           <Form.Input\n//             id=\"passInput\"\n//             fluid\n//             label=\"Enter Password\"\n//             type=\"password\"\n//             value={pass}\n//             onChange={(e) => updateState(setPass, e)}\n//           />\n//         </div>\n//         <br />\n//         <Form.Button id=\"submit\" display={loading}>\n//           Sign In\n//         </Form.Button>\n//       </Form>\n//       <br />\n//       {/* <div>\n//         <Link to=\"/ResetPassword\">Forgot password?</Link>\n//       </div>\n//       <br /> */}\n//       <div>\n//         Don't have an account?\n//         <Link value=\"signup\" to=\"/Home/SignUp\">\n//           Sign Up\n//         </Link>\n//       </div>\n//     </>\n//   );\n// }\n// export default SignUpFormCompany;","map":{"version":3,"sources":["C:/Users/akgun/Desktop/PlaDat/pladat/src/components/SignInForm.js"],"names":[],"mappingssourcesContent":["// import React, { useState } from \"react\";\r\n// import { useHistory, Link } from \"react-router-dom\";\r\n// import auth from \"./Auth\";\r\n// import { useAuth } from \"../contexts/AuthContext\";\r\n\r\n// function SignUpFormCompany(props) {\r\n//   const [email, setEmail] = useState(null);\r\n//   const [pass, setPass] = useState(null);\r\n//   const [email_error, setEmailError] = useState(null);\r\n//   const [pass_error, setPassError] = useState([]);\r\n//   const [loading, setLoading] = useState(false); //for firebase\r\n//   const { signin } = useAuth();\r\n//   const [address, setAddress] = useState();\r\n//   const [error, setError] = useState();\r\n\r\n//   //TODO: Add proper validation\r\n//   function isValid() {\r\n//     var format = /[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\r\n//     if (!email.trim()) {\r\n//       setEmailError((prevState) => (prevState = \"Please enter email\"));\r\n//     }\r\n//   }\r\n\r\n//   const history = useHistory();\r\n//   function redirect(url) {\r\n//     history.push(url);\r\n//   }\r\n\r\n//   function updateState(func, e) {\r\n//     func((prevState) => (prevState = e.target.value));\r\n//   }\r\n\r\n//   //FIXME: Con't show the error messages\r\n//   function handleError() {\r\n//     $(function () {\r\n//       $(\"#submit\").on(\"click\", function () {\r\n//         $(\"#emailInput\").attr(\"error\", { content: email_error });\r\n//         $(\"#passInput\").attr(\"error\", { content: pass_error });\r\n//       });\r\n//     });\r\n//   }\r\n\r\n//   async function postData() {\r\n//     var addressPost = \"\";\r\n//     var response = null;\r\n//     const user = { email: email, password: pass };\r\n//     if (props.user === \"student\") {\r\n//       addressPost = \"/SignInStudent\";\r\n//       setAddress(\"/HomeStudent\");\r\n//     } else if (props.user === \"company\") {\r\n//       addressPost = \"/SignInCompany\";\r\n//       setAddress(\"/HomeCompany\");\r\n//     }\r\n//     response = await fetch(addressPost, {\r\n//       method: \"POST\",\r\n//       headers: {\r\n//         \"Content-type\": \"application/json; charset=UTF-8\",\r\n//       },\r\n//       body: JSON.stringify(user),\r\n//     });\r\n\r\n//     if (response.ok) {\r\n//       console.log(\"okkkk\");\r\n//       auth.login(() => {\r\n//         history.push(address);\r\n//       });\r\n//     } else {\r\n//       //TODO: Put warning according to the code of the response\r\n//       //TODO: Maybe find a better way???\r\n//       console.log(\"nöööö\");\r\n//     }\r\n//   }\r\n//   function hasError() {\r\n//     if (email_error === null || pass_error === null) {\r\n//       return false;\r\n//     } else {\r\n//       return true;\r\n//     }\r\n//   }\r\n\r\n//   async function handleSubmit(e) {\r\n//     e.preventDefault();\r\n//     isValid();\r\n//     if (!hasError()) {\r\n//       postData();\r\n//       try {\r\n//         setError(\"\");\r\n//         setLoading(true);\r\n//         await signin(email, pass);\r\n//         redirect(address);\r\n//       } catch {\r\n//         setError(\"Failed to sign in\");\r\n//       }\r\n//       setLoading(false);\r\n//     } else {\r\n//       handleError();\r\n//     }\r\n//   }\r\n\r\n//   return (\r\n//     <>\r\n//       <Form id=\"form\" onSubmit={(e) => handleSubmit(e)}>\r\n//         <div>\r\n//           <Form.Input\r\n//             id=\"emailInput\"\r\n//             fluid\r\n//             type=\"email\"\r\n//             label=\"Email\"\r\n//             placeholder=\"Email\"\r\n//             value={email}\r\n//             onChange={(e) => updateState(setEmail, e)}\r\n//           />\r\n//         </div>\r\n//         <br />\r\n//         <div>\r\n//           <Form.Input\r\n//             id=\"passInput\"\r\n//             fluid\r\n//             label=\"Enter Password\"\r\n//             type=\"password\"\r\n//             value={pass}\r\n//             onChange={(e) => updateState(setPass, e)}\r\n//           />\r\n//         </div>\r\n//         <br />\r\n//         <Form.Button id=\"submit\" display={loading}>\r\n//           Sign In\r\n//         </Form.Button>\r\n//       </Form>\r\n//       <br />\r\n//       {/* <div>\r\n//         <Link to=\"/ResetPassword\">Forgot password?</Link>\r\n//       </div>\r\n//       <br /> */}\r\n//       <div>\r\n//         Don't have an account?\r\n//         <Link value=\"signup\" to=\"/Home/SignUp\">\r\n//           Sign Up\r\n//         </Link>\r\n//       </div>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// export default SignUpFormCompany;\r\n"]},"metadata":{},"sourceType":"module"}