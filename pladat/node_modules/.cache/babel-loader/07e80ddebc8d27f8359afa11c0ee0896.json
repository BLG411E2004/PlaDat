{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\akgun\\\\Desktop\\\\PlaDat\\\\pladat\\\\src\\\\components\\\\supcomp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Formik, Form, Field, useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Password from \"./FormikField/PasswordInput\";\nimport Select from \"./FormikField/Select\";\n\nfunction SignUpFormCompanyy() {\n  _s();\n\n  const mockitems = [{\n    label: \"ist\",\n    value: 34\n  }, {\n    label: \"ankara\",\n    value: 6\n  }];\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      email: \"\",\n      city: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    },\n    validationSchema: Yup.object({\n      name: Yup.string().required(\"Required\"),\n      email: Yup.string().required(\"Required\"),\n      city: Yup.string().required(\"Required\"),\n      password: Yup.string().required(\"Required\"),\n      confirmPassword: Yup.string().required(\"Required\")\n    }),\n    onSubmit: values => {\n      console.log(values);\n    }\n  });\n  const {\n    values,\n    touched,\n    errors,\n    handleChange,\n    handleBlur,\n    handleSubmit\n  } = formik;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"standard-basic\",\n        label: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"standard-basic\",\n        type: \"email\",\n        label: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"standard-basic\",\n        type: \"password\",\n        label: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"city\",\n          children: \"City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"city\",\n          id: \"city\",\n          name: \"city\",\n          value: city,\n          onChange: handleChange,\n          children: mockitems.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: item.value,\n            children: item.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n          children: errors.company && touched.company && errors.company\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignUpFormCompanyy, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = SignUpFormCompanyy;\nexport default SignUpFormCompanyy;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpFormCompanyy\");","map":{"version":3,"sources":["C:/Users/akgun/Desktop/PlaDat/pladat/src/components/supcomp.js"],"names":["React","useState","Formik","Form","Field","useFormik","Yup","TextField","Password","Select","SignUpFormCompanyy","mockitems","label","value","formik","initialValues","name","email","city","password","confirmPassword","validationSchema","object","string","required","onSubmit","values","console","log","touched","errors","handleChange","handleBlur","handleSubmit","map","item","company"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Formik, Form, Field, useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Password from \"./FormikField/PasswordInput\";\r\nimport Select from \"./FormikField/Select\";\r\n\r\nfunction SignUpFormCompanyy() {\r\n  const mockitems = [\r\n    { label: \"ist\", value: 34 },\r\n    { label: \"ankara\", value: 6 },\r\n  ];\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      email: \"\",\r\n      city: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n    },\r\n    validationSchema: Yup.object({\r\n      name: Yup.string().required(\"Required\"),\r\n      email: Yup.string().required(\"Required\"),\r\n      city: Yup.string().required(\"Required\"),\r\n      password: Yup.string().required(\"Required\"),\r\n      confirmPassword: Yup.string().required(\"Required\"),\r\n    }),\r\n    onSubmit: (values) => {\r\n      console.log(values);\r\n    },\r\n  });\r\n  const {\r\n    values,\r\n    touched,\r\n    errors,\r\n    handleChange,\r\n    handleBlur,\r\n    handleSubmit,\r\n  } = formik;\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <TextField id=\"standard-basic\" label=\"Name\" />\r\n        <TextField id=\"standard-basic\" type=\"email\" label=\"Email\" />\r\n        <TextField id=\"standard-basic\" type=\"password\" label=\"Name\" />\r\n      </div>\r\n      <br />\r\n      <div>\r\n        <FormControl>\r\n          <InputLabel id=\"city\">City</InputLabel>\r\n          <Select\r\n            labelId=\"city\"\r\n            id=\"city\"\r\n            name=\"city\"\r\n            value={city}\r\n            onChange={handleChange}\r\n          >\r\n            {mockitems.map((item) => (\r\n              <MenuItem value={item.value}>{item.label}</MenuItem>\r\n            ))}\r\n          </Select>\r\n          <FormHelperText>\r\n            {errors.company && touched.company && errors.company}\r\n          </FormHelperText>\r\n        </FormControl>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SignUpFormCompanyy;\r\n"]},"metadata":{},"sourceType":"module"}