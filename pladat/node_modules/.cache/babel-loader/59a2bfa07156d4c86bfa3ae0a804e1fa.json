{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\akgun\\\\Desktop\\\\PlaDat\\\\pladat\\\\src\\\\components\\\\supcomp.js\";\nimport React, { useState } from \"react\";\nimport { Formik, Form, Field, useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { TextField } from \"material-ui-formik-components/TextField\";\nimport { Select } from \"material-ui-formik-components/Select\";\n\nfunction SignUpFormCompanyy() {\n  const mockitems = [{\n    label: \"ist\",\n    value: 34\n  }, {\n    label: \"ankara\",\n    value: 6\n  }];\n  const sigUpSchema = Yup.object().shape({\n    name: Yup.string().min(2, \"Company name is too short\").required(\"Company name is required\"),\n    email: Yup.string().email(\"Please enter a valid email\").required(\"Email is required\"),\n    city: Yup.number().required(\"Please select a city\") // password: Yup.string()\n    //   .password()\n    //   .required(\"Password is required\")\n    //   .min(8, \"pass 8\")\n    //   .minLowercase(1, \"has min low\")\n    //   .minUppercase(1, \"has min high\")\n    //   .minNumber(1, \"has min num\")\n    //   .minSymbol(1, \"has min sym\"),\n    // confirmPassword: Yup.string().required(\"is req\"),\n\n  });\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      name: \"\",\n      city: \"\"\n    },\n    onSubmit: values => {\n      alert(`Name: ${values.name}\\nCity: ${values.city}`);\n    },\n    sigUpSchema: sigUpSchema,\n    children: formik => /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        name: \"name\",\n        label: \"Name\",\n        component: TextField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"email\",\n        label: \"Email\",\n        type: \"email\",\n        component: TextField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        required: true,\n        fullWidth: true,\n        name: \"city\",\n        label: \"City\",\n        options: mockitems,\n        component: Select\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        required: true,\n        fullWidth: true,\n        name: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        component: TextField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !formik.dirty,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_c = SignUpFormCompanyy;\nexport default SignUpFormCompanyy;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpFormCompanyy\");","map":{"version":3,"sources":["C:/Users/akgun/Desktop/PlaDat/pladat/src/components/supcomp.js"],"names":["React","useState","Formik","Form","Field","useFormik","Yup","TextField","Select","SignUpFormCompanyy","mockitems","label","value","sigUpSchema","object","shape","name","string","min","required","email","city","number","values","alert","formik","dirty"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,SAA9B,QAA+C,QAA/C;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,SAAT,QAA0B,yCAA1B;AACA,SAASC,MAAT,QAAuB,sCAAvB;;AAEA,SAASC,kBAAT,GAA8B;AAC5B,QAAMC,SAAS,GAAG,CAChB;AAAEC,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GADgB,EAEhB;AAAED,IAAAA,KAAK,EAAE,QAAT;AAAmBC,IAAAA,KAAK,EAAE;AAA1B,GAFgB,CAAlB;AAIA,QAAMC,WAAW,GAAGP,GAAG,CAACQ,MAAJ,GAAaC,KAAb,CAAmB;AACrCC,IAAAA,IAAI,EAAEV,GAAG,CAACW,MAAJ,GACHC,GADG,CACC,CADD,EACI,2BADJ,EAEHC,QAFG,CAEM,0BAFN,CAD+B;AAIrCC,IAAAA,KAAK,EAAEd,GAAG,CAACW,MAAJ,GACJG,KADI,CACE,4BADF,EAEJD,QAFI,CAEK,mBAFL,CAJ8B;AAOrCE,IAAAA,IAAI,EAAEf,GAAG,CAACgB,MAAJ,GAAaH,QAAb,CAAsB,sBAAtB,CAP+B,CASrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAjBqC,GAAnB,CAApB;AAmBA,sBACE,QAAC,MAAD;AACE,IAAA,aAAa,EAAE;AACbH,MAAAA,IAAI,EAAE,EADO;AAEbK,MAAAA,IAAI,EAAE;AAFO,KADjB;AAKE,IAAA,QAAQ,EAAGE,MAAD,IAAY;AACpBC,MAAAA,KAAK,CAAE,SAAQD,MAAM,CAACP,IAAK,WAAUO,MAAM,CAACF,IAAK,EAA5C,CAAL;AACD,KAPH;AAQE,IAAA,WAAW,EAAER,WARf;AAAA,cAUIY,MAAD,iBACC,QAAC,IAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAC,MAAzB;AAAgC,QAAA,SAAS,EAAElB;AAA3C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,KAAK,EAAC,OAFR;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,SAAS,EAAEA;AAJb;AAAA;AAAA;AAAA;AAAA,cAFF,eAQE,QAAC,KAAD;AACE,QAAA,QAAQ,MADV;AAEE,QAAA,SAAS,MAFX;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,KAAK,EAAC,MAJR;AAKE,QAAA,OAAO,EAAEG,SALX;AAME,QAAA,SAAS,EAAEF;AANb;AAAA;AAAA;AAAA;AAAA,cARF,eAgBE,QAAC,KAAD;AACE,QAAA,QAAQ,MADV;AAEE,QAAA,SAAS,MAFX;AAGE,QAAA,IAAI,EAAC,UAHP;AAIE,QAAA,KAAK,EAAC,UAJR;AAKE,QAAA,IAAI,EAAC,UALP;AAME,QAAA,SAAS,EAAED;AANb;AAAA;AAAA;AAAA;AAAA,cAhBF,eAwBE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,QAAQ,EAAE,CAACkB,MAAM,CAACC,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAxBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAXJ;AAAA;AAAA;AAAA;AAAA,UADF;AA2CD;;KAnEQjB,kB;AAqET,eAAeA,kBAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Formik, Form, Field, useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { TextField } from \"material-ui-formik-components/TextField\";\r\nimport { Select } from \"material-ui-formik-components/Select\";\r\n\r\nfunction SignUpFormCompanyy() {\r\n  const mockitems = [\r\n    { label: \"ist\", value: 34 },\r\n    { label: \"ankara\", value: 6 },\r\n  ];\r\n  const sigUpSchema = Yup.object().shape({\r\n    name: Yup.string()\r\n      .min(2, \"Company name is too short\")\r\n      .required(\"Company name is required\"),\r\n    email: Yup.string()\r\n      .email(\"Please enter a valid email\")\r\n      .required(\"Email is required\"),\r\n    city: Yup.number().required(\"Please select a city\"),\r\n\r\n    // password: Yup.string()\r\n    //   .password()\r\n    //   .required(\"Password is required\")\r\n    //   .min(8, \"pass 8\")\r\n    //   .minLowercase(1, \"has min low\")\r\n    //   .minUppercase(1, \"has min high\")\r\n    //   .minNumber(1, \"has min num\")\r\n    //   .minSymbol(1, \"has min sym\"),\r\n    // confirmPassword: Yup.string().required(\"is req\"),\r\n  });\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        name: \"\",\r\n        city: \"\",\r\n      }}\r\n      onSubmit={(values) => {\r\n        alert(`Name: ${values.name}\\nCity: ${values.city}`);\r\n      }}\r\n      sigUpSchema={sigUpSchema}\r\n    >\r\n      {(formik) => (\r\n        <Form>\r\n          <Field name=\"name\" label=\"Name\" component={TextField} />\r\n          <Field\r\n            name=\"email\"\r\n            label=\"Email\"\r\n            type=\"email\"\r\n            component={TextField}\r\n          />\r\n          <Field\r\n            required\r\n            fullWidth\r\n            name=\"city\"\r\n            label=\"City\"\r\n            options={mockitems}\r\n            component={Select}\r\n          />\r\n          <Field\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            component={TextField}\r\n          />\r\n          <button type=\"submit\" disabled={!formik.dirty}>\r\n            Submit\r\n          </button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default SignUpFormCompanyy;\r\n"]},"metadata":{},"sourceType":"module"}