{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\akgun\\\\Desktop\\\\PlaDat\\\\pladat\\\\src\\\\components\\\\SignInForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form } from 'semantic-ui-react';\nimport $ from \"jquery\";\n\nfunction SignUpFormCompany(props) {\n  _s();\n\n  const [email, setEmail] = useState(null);\n  const [pass, setPass] = useState(null);\n  const [email_error, setEmailError] = useState(null);\n  const [pass_error, setPassError] = useState([]); //TODO: Add proper validation\n\n  function isValid() {\n    var format = /[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n\n    function hasUpper(str) {\n      return /[A-Z]/.test(str);\n    }\n\n    if (!email.trim()) {\n      setNameError(prevState => prevState = \"Please endter email\");\n    }\n  }\n\n  function updateState(func, e) {\n    func(prevState => prevState = e.target.value);\n  } //FIXME: Con't show the error messages\n\n\n  function handleError() {\n    $(function () {\n      $(\"#submit\").on(\"click\", function () {\n        $(\"#emailInput\").attr(\"error\", {\n          content: email_error\n        });\n        $(\"#passInput\").attr(\"error\", {\n          content: pass_error\n        });\n      });\n    });\n  }\n\n  async function postData() {\n    const user = {\n      email: email,\n      password: pass\n    };\n\n    if (props.user == \"student\") {\n      const response = await fetch(\"/SignInStudent\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        },\n        \"body\": JSON.stringify(user)\n      });\n    } else {\n      const response = await fetch(\"/SignInCompany\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        },\n        \"body\": JSON.stringify(user)\n      });\n    }\n\n    if (response.ok) {\n      console.log(\"okkkk\");\n    } else {\n      console.log(\"nöööö\");\n    }\n  }\n\n  function hasError() {\n    if (email_error === null || pass_error === null) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    isValid();\n\n    if (!hasError()) {\n      postData();\n    } else {\n      handleError();\n    } //handleError();\n\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      id: \"form\",\n      onSubmit: e => handleSubmit(e),\n      loading: true,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form.Input, {\n          id: \"emailInput\",\n          fluid: true,\n          type: \"email\",\n          label: \"Email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => updateState(setEmail, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form.Input, {\n          id: \"passInput\",\n          fluid: true,\n          label: \"Enter Password\",\n          type: \"password\",\n          value: pass,\n          onChange: e => updateState(setPass, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Button, {\n        id: \"submit\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignUpFormCompany, \"HyHO9jVUmbFgTE1RegpWbYMoGhc=\");\n\n_c = SignUpFormCompany;\nexport default SignUpFormCompany;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpFormCompany\");","map":{"version":3,"sources":["C:/Users/akgun/Desktop/PlaDat/pladat/src/components/SignInForm.js"],"names":["React","useState","Form","$","SignUpFormCompany","props","email","setEmail","pass","setPass","email_error","setEmailError","pass_error","setPassError","isValid","format","hasUpper","str","test","trim","setNameError","prevState","updateState","func","e","target","value","handleError","on","attr","content","postData","user","password","response","fetch","method","headers","JSON","stringify","ok","console","log","hasError","handleSubmit","preventDefault"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport { Form } from 'semantic-ui-react'\r\nimport $ from \"jquery\";\r\n\r\n\r\nfunction SignUpFormCompany(props){\r\n\r\n  const [email, setEmail] = useState(null)\r\n  const [pass, setPass] = useState(null)\r\n  const [email_error,setEmailError] =useState(null)\r\n  const [pass_error,setPassError] = useState([])\r\n\r\n\r\n  //TODO: Add proper validation\r\n  function isValid(){\r\n    var format = /[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\r\n    function hasUpper(str){\r\n      return (/[A-Z]/.test(str))\r\n    }\r\n    if(!email.trim()){\r\n      setNameError(prevState => prevState = \"Please endter email\")\r\n    }\r\n  }\r\n\r\n  function updateState(func,e){\r\n    func(prevState => prevState = e.target.value)\r\n  }\r\n\r\n  //FIXME: Con't show the error messages\r\n  function handleError() {\r\n    $(function(){\r\n      $(\"#submit\").on(\"click\",function(){\r\n        $(\"#emailInput\").attr(\"error\",{ content: email_error});\r\n        $(\"#passInput\").attr(\"error\",{ content: pass_error});\r\n      })\r\n    })\r\n    }\r\n\r\n    \r\n  async function postData(){\r\n    const user = {email:email,password:pass};\r\n    if(props.user == \"student\"){\r\n      const response = await fetch(\"/SignInStudent\",{\r\n        method:\"POST\",\r\n        headers:{\r\n          \"Content-type\":\"application/json; charset=UTF-8\"\r\n        },\r\n        \"body\":JSON.stringify(user)\r\n      }) \r\n    }\r\n    else{\r\n      const response = await fetch(\"/SignInCompany\",{\r\n        method:\"POST\",\r\n        headers:{\r\n          \"Content-type\":\"application/json; charset=UTF-8\"\r\n        },\r\n        \"body\":JSON.stringify(user)\r\n      }) \r\n    }    \r\n    if(response.ok){\r\n      console.log(\"okkkk\")\r\n    }\r\n    else{\r\n      console.log(\"nöööö\")\r\n    }\r\n  }\r\n\r\n  function hasError(){\r\n    if(email_error === null || pass_error === null){\r\n      return false;\r\n    }\r\n    else{\r\n      return true;\r\n    }\r\n  }\r\n\r\n\r\n  async function handleSubmit(e){\r\n    e.preventDefault();\r\n    isValid();\r\n    if(!hasError()){\r\n      postData();\r\n    }\r\n    else{\r\n      handleError();\r\n    }\r\n    //handleError();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Form id = \"form\" onSubmit = {e => handleSubmit(e)} loading>\r\n        <div>\r\n          <Form.Input id = \"emailInput\" fluid  type=\"email\" label='Email' placeholder='Email' value={email} onChange={e => updateState(setEmail,e)}/>\r\n        </div>    \r\n        <div>\r\n          <Form.Input id = \"passInput\" fluid label='Enter Password' type='password' value={pass} onChange={e => updateState(setPass,e)}/>\r\n        </div>        \r\n        <Form.Button id=\"submit\">Sign In</Form.Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUpFormCompany;"]},"metadata":{},"sourceType":"module"}