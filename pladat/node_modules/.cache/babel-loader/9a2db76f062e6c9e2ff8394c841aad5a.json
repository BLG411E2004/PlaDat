{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\akgun\\\\Desktop\\\\PlaDat\\\\pladat\\\\src\\\\components\\\\SignUpFormCompanyy.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form } from \"semantic-ui-react\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport Message from \"./Message\";\nimport { Link } from \"react-router-dom\";\nimport { useFormik, Formik } from \"formik\";\n\nfunction SignUpFormCompany() {\n  _s();\n\n  const [city, setCity] = useState(null);\n  const [loaded, setLoaded] = useState(false); //for form select values\n\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(false); //for firebase\n\n  const {\n    signup\n  } = useAuth(); //TODO: Check for if the email has already been used\n\n  function formatCity(data) {\n    var formatted_array = [];\n\n    for (var i = 0; i < data.length; i++) {\n      formatted_array.push({\n        key: data[i]._id,\n        text: data[i].name,\n        value: data[i]._id\n      });\n    }\n\n    return formatted_array;\n  }\n\n  async function getCity() {\n    const response = await fetch(\"/GetCity\");\n    const data = await response.json();\n    const cities = formatCity(data);\n    setCity(cities);\n    setLoaded(true);\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    formik.handleSubmit();\n  }\n\n  if (city == null) {\n    getCity();\n  }\n\n  if (loaded == true) {\n    const element = document.getElementById(\"form\");\n    element.classList.remove(\"loading\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        companyName: \"\",\n        email: \"\",\n        companyCity: \"\",\n        password: \"\",\n        confirmPassword: \"\"\n      },\n      onSubmit: e => handleSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        id: \"form\",\n        onSubmit: e => handleSubmit(e),\n        loading: true,\n        children: [error && /*#__PURE__*/_jsxDEV(Message, {\n          message: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Form.Input, {\n            id: \"companyNameInput\",\n            fluid: true,\n            name: \"companyName\",\n            label: \"Company Name\",\n            placeholder: \"Name\",\n            value: formik.values.companyName,\n            onChange: formik.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Form.Input, {\n            id: \"companyEmailInput\",\n            fluid: true,\n            type: \"email\",\n            name: \"email\",\n            label: \"Company Email\",\n            placeholder: \"Email\",\n            value: formik.values.email,\n            onChange: formik.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Form.Select, {\n            fluid: true,\n            selection: true,\n            label: \"City\",\n            name: \"companyCity\",\n            options: city,\n            placeholder: \"City\",\n            value: formik.values.companyCity,\n            onChange: formik.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Form.Input, {\n            id: \"companyPassInput\",\n            fluid: true,\n            label: \"Enter Password\",\n            name: \"password\",\n            type: \"password\",\n            value: formik.values.password,\n            onChange: formik.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Form.Input, {\n            id: \"companyConfirmPassInput\",\n            fluid: true,\n            name: \"confirmPassword\",\n            label: \"Confirm Password\",\n            type: \"password\",\n            value: formik.values.confirmPassword,\n            onChange: formik.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Button, {\n          id: \"submit\",\n          disabled: loading,\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"You already have an account?\", /*#__PURE__*/_jsxDEV(Link, {\n          value: \"signin\",\n          to: \"/Home/SignIn\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(SignUpFormCompany, \"7jIKRziY1tXMQk794yxue9SpU50=\", false, function () {\n  return [useAuth];\n});\n\n_c = SignUpFormCompany;\nexport default SignUpFormCompany;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpFormCompany\");","map":{"version":3,"sources":["C:/Users/akgun/Desktop/PlaDat/pladat/src/components/SignUpFormCompanyy.js"],"names":["React","useState","Form","useAuth","Message","Link","useFormik","Formik","SignUpFormCompany","city","setCity","loaded","setLoaded","error","setError","loading","setLoading","signup","formatCity","data","formatted_array","i","length","push","key","_id","text","name","value","getCity","response","fetch","json","cities","handleSubmit","e","preventDefault","formik","element","document","getElementById","classList","remove","companyName","email","companyCity","password","confirmPassword","values","handleChange"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport Message from \"./Message\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useFormik, Formik } from \"formik\";\r\n\r\nfunction SignUpFormCompany() {\r\n  const [city, setCity] = useState(null);\r\n  const [loaded, setLoaded] = useState(false); //for form select values\r\n  const [error, setError] = useState();\r\n  const [loading, setLoading] = useState(false); //for firebase\r\n  const { signup } = useAuth();\r\n\r\n  //TODO: Check for if the email has already been used\r\n\r\n  function formatCity(data) {\r\n    var formatted_array = [];\r\n    for (var i = 0; i < data.length; i++) {\r\n      formatted_array.push({\r\n        key: data[i]._id,\r\n        text: data[i].name,\r\n        value: data[i]._id,\r\n      });\r\n    }\r\n    return formatted_array;\r\n  }\r\n\r\n  async function getCity() {\r\n    const response = await fetch(\"/GetCity\");\r\n    const data = await response.json();\r\n    const cities = formatCity(data);\r\n\r\n    setCity(cities);\r\n    setLoaded(true);\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    formik.handleSubmit();\r\n  }\r\n\r\n  if (city == null) {\r\n    getCity();\r\n  }\r\n  if (loaded == true) {\r\n    const element = document.getElementById(\"form\");\r\n    element.classList.remove(\"loading\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{\r\n          companyName: \"\",\r\n          email: \"\",\r\n          companyCity: \"\",\r\n          password: \"\",\r\n          confirmPassword: \"\",\r\n        }}\r\n        onSubmit={(e) => handleSubmit(e)}\r\n      >\r\n        <Form id=\"form\" onSubmit={(e) => handleSubmit(e)} loading>\r\n          {error && <Message message={error} />}\r\n          <div>\r\n            <Form.Input\r\n              id=\"companyNameInput\"\r\n              fluid\r\n              name=\"companyName\"\r\n              label=\"Company Name\"\r\n              placeholder=\"Name\"\r\n              value={formik.values.companyName}\r\n              onChange={formik.handleChange}\r\n            />\r\n          </div>\r\n          <br />\r\n          <div>\r\n            <Form.Input\r\n              id=\"companyEmailInput\"\r\n              fluid\r\n              type=\"email\"\r\n              name=\"email\"\r\n              label=\"Company Email\"\r\n              placeholder=\"Email\"\r\n              value={formik.values.email}\r\n              onChange={formik.handleChange}\r\n            />\r\n          </div>\r\n          <br />\r\n          <div>\r\n            <Form.Select\r\n              fluid\r\n              selection\r\n              label=\"City\"\r\n              name=\"companyCity\"\r\n              options={city}\r\n              placeholder=\"City\"\r\n              value={formik.values.companyCity}\r\n              onChange={formik.handleChange}\r\n            />\r\n          </div>\r\n          <br />\r\n          <div>\r\n            <Form.Input\r\n              id=\"companyPassInput\"\r\n              fluid\r\n              label=\"Enter Password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              value={formik.values.password}\r\n              onChange={formik.handleChange}\r\n            />\r\n          </div>\r\n          <br />\r\n          <div>\r\n            <Form.Input\r\n              id=\"companyConfirmPassInput\"\r\n              fluid\r\n              name=\"confirmPassword\"\r\n              label=\"Confirm Password\"\r\n              type=\"password\"\r\n              value={formik.values.confirmPassword}\r\n              onChange={formik.handleChange}\r\n            />\r\n          </div>\r\n          <br />\r\n          <Form.Button id=\"submit\" disabled={loading}>\r\n            Sign Up\r\n          </Form.Button>\r\n        </Form>\r\n        <br />\r\n        <div>\r\n          You already have an account?\r\n          <Link value=\"signin\" to=\"/Home/SignIn\">\r\n            Sign In\r\n          </Link>\r\n        </div>\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SignUpFormCompany;\r\n"]},"metadata":{},"sourceType":"module"}